[
    {
        "prompt": "Write an ABAP program to display a list of orders from the table 'ZORDER' where the 'ORDERDATE' is in the last month.",
        "response": "REPORT zorder_last_month.\n\nDATA: lt_order TYPE TABLE OF zorder,\n      ls_order TYPE zorder,\n      lv_last_month TYPE sy-datum.\n\nlv_last_month = sy-datum - 30.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zorder INTO TABLE lt_order WHERE orderdate BETWEEN lv_last_month AND sy-datum.\n\n  LOOP AT lt_order INTO ls_order.\n    WRITE: / ls_order-orderid, ls_order-customerid, ls_order-orderdate.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the list of products from the 'ZPRODUCT' table whose 'EXPIRY_DATE' is within the next 30 days.",
        "response": "REPORT zproduct_expiry.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct,\n      lv_today TYPE sy-datum,\n      lv_30_days TYPE sy-datum.\n\nGET TIME STAMP FIELD lv_today.\nlv_30_days = lv_today + 30.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE expiry_date BETWEEN lv_today AND lv_30_days.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-productname, ls_product-expiry_date.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the list of customers from the 'ZCUSTOMER' table who live in the 'CITY' 'Los Angeles' and whose 'CREDIT_LIMIT' is above 5000.",
        "response": "REPORT zcustomer_credit_limit.\n\nDATA: lt_customer TYPE TABLE OF zcustomer,\n      ls_customer TYPE zcustomer.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zcustomer INTO TABLE lt_customer WHERE city = 'Los Angeles' AND credit_limit > 5000.\n\n  LOOP AT lt_customer INTO ls_customer.\n    WRITE: / ls_customer-custid, ls_customer-name, ls_customer-city, ls_customer-credit_limit.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of customers from the 'ZCUSTOMER' table whose 'CREDIT_LIMIT' is greater than 5000.",
        "response": "REPORT zcustomer_credit_limit.\n\nDATA: lt_customer TYPE TABLE OF zcustomer,\n      ls_customer TYPE zcustomer.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zcustomer INTO TABLE lt_customer WHERE credit_limit > 5000.\n\n  LOOP AT lt_customer INTO ls_customer.\n    WRITE: / ls_customer-custid, ls_customer-name, ls_customer-credit_limit.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the 'EMPID' and 'NAME' of all employees from the 'ZEMPLOYEE' table who have worked for more than 5 years in the company.",
        "response": "REPORT zemployee_experience.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE experience > 5.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-name.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the list of employees from the 'ZEMPLOYEE' table who have a salary greater than 5000.",
        "response": "REPORT zemployee_salary.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee,\n      lv_salary TYPE zemployee-salary VALUE 5000.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE salary > lv_salary.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-name, ls_employee-salary.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to update the 'PRICE' of a product in the 'ZPRODUCT' table given the 'PRODUCTID'.",
        "response": "REPORT zupdate_product_price.\n\nDATA: lv_productid TYPE zproduct-productid VALUE 'P001',\n      lv_new_price TYPE zproduct-price VALUE '1500'.\n\nUPDATE zproduct SET price = lv_new_price WHERE productid = lv_productid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Product price updated successfully for Product ID: ', lv_productid.\nELSE.\n  WRITE: / 'Error in updating product price for Product ID: ', lv_productid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display a list of products from the 'ZPRODUCT' table where the 'PRODUCTNAME' starts with 'A'.",
        "response": "REPORT zproduct_name.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE productname LIKE 'A%'.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-productname.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the list of products from the 'ZPRODUCT' table where the 'STOCK' is less than 10.",
        "response": "REPORT zproduct_stock.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE stock < 10.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-productname, ls_product-stock.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to update the 'SALARY' of an employee in the 'ZEMPLOYEE' table for a given 'EMPID' using a function module.",
        "response": "REPORT zupdate_employee_salary.\n\nDATA: lv_empid TYPE zemployee-empid VALUE '001',\n      lv_new_salary TYPE zemployee-salary VALUE 5000.\n\nCALL FUNCTION 'ZUPDATE_SALARY'\n  EXPORTING\n    iv_empid = lv_empid\n    iv_salary = lv_new_salary.\n\n*Function Module\nFUNCTION ZUPDATE_SALARY.\n  UPDATE zemployee SET salary = iv_salary WHERE empid = iv_empid.\n\n  IF sy-subrc = 0.\n    WRITE: / 'Employee salary updated successfully for Employee ID: ', iv_empid.\n  ELSE.\n    WRITE: / 'Error in updating employee salary for Employee ID: ', iv_empid.\n  ENDIF.\nENDFUNCTION."
    },
    {
        "prompt": "Write an ABAP program to display the total 'SALES_AMOUNT' from the 'ZSALES' table for each 'SALES_PERSON'.",
        "response": "REPORT ztotal_sales.\n\nTYPES: BEGIN OF ty_sales,\n         sales_person   TYPE zsales-sales_person,\n         total_amount   TYPE zsales-sales_amount,\n       END OF ty_sales.\n\nDATA: lt_sales TYPE TABLE OF ty_sales,\n      ls_sales TYPE ty_sales.\n\nSTART-OF-SELECTION.\n\n  SELECT sales_person, SUM( sales_amount ) AS total_amount\n    FROM zsales\n    GROUP BY sales_person\n    INTO TABLE lt_sales.\n\n  LOOP AT lt_sales INTO ls_sales.\n    WRITE: / 'Sales Person: ', ls_sales-sales_person, 'Total Sales Amount: ', ls_sales-total_amount.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to insert a new record into the 'ZEMPLOYEE' table.",
        "response": "REPORT zinsert_employee.\n\nDATA: ls_employee TYPE zemployee.\n\nls_employee-empid = 'E002'.\nls_employee-name = 'John Doe'.\nls_employee-age = 30.\nls_employee-salary = 5000.\n\nINSERT zemployee FROM ls_employee.\n\nIF sy-subrc = 0.\n  WRITE: / 'Employee record inserted successfully for Employee ID: ', ls_employee-empid.\nELSE.\n  WRITE: / 'Error in inserting employee record for Employee ID: ', ls_employee-empid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display a list of products from the 'ZPRODUCT' table where the 'STOCK' is greater than 10.",
        "response": "REPORT zproduct_stock.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE stock > 10.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-productname, ls_product-stock.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the 'EMPID' and total 'SALARY' from the 'ZEMPLOYEE' table for each employee.",
        "response": "REPORT zemployee_total_salary.\n\nTYPES: BEGIN OF ty_employee,\n         empid   TYPE zemployee-empid,\n         salary  TYPE zemployee-salary,\n       END OF ty_employee.\n\nDATA: lt_employee TYPE TABLE OF ty_employee,\n      ls_employee TYPE ty_employee.\n\nSTART-OF-SELECTION.\n\n  SELECT empid, SUM( salary ) AS salary FROM zemployee GROUP BY empid INTO TABLE lt_employee.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / 'Employee ID: ', ls_employee-empid, 'Total Salary: ', ls_employee-salary.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to delete a product from the 'ZPRODUCT' table given the 'PRODUCTID'.",
        "response": "REPORT zdelete_product.\n\nDATA: lv_productid TYPE zproduct-productid VALUE 'P001'.\n\nDELETE FROM zproduct WHERE productid = lv_productid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Product deleted successfully for Product ID: ', lv_productid.\nELSE.\n  WRITE: / 'Error in deleting product for Product ID: ', lv_productid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to increase the 'SALARY' of all employees in the 'ZEMPLOYEE' table by 10%.",
        "response": "REPORT zincrease_salary.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee.\n\nSELECT * FROM zemployee INTO TABLE lt_employee.\n\nLOOP AT lt_employee INTO ls_employee.\n  ls_employee-salary = ls_employee-salary * 1.1.\n  MODIFY zemployee FROM ls_employee.\nENDLOOP.\n\nIF sy-subrc = 0.\n  WRITE: / 'Salary of all employees increased by 10% successfully'.\nELSE.\n  WRITE: / 'Error in increasing salary of employees'.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display the 'EMPID' and 'NAME' of all employees from the 'ZEMPLOYEE' table whose 'SALARY' is less than 3000.",
        "response": "REPORT zemployee_salary.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE salary < 3000.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-name.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of products from the 'ZPRODUCT' table where the 'STOCK' is less than 10.",
        "response": "REPORT zproduct_stock.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE stock < 10.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-productname, ls_product-stock.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of customers from the 'ZCUSTOMER' table who are from 'New York' and whose 'CREDITLIMIT' is greater than 5000.",
        "response": "REPORT zcustomer_city_credit.\n\nDATA: lt_customer TYPE TABLE OF zcustomer,\n      ls_customer TYPE zcustomer,\n      lv_city TYPE zcustomer-city VALUE 'New York'.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zcustomer INTO TABLE lt_customer WHERE city = lv_city AND creditlimit > 5000.\n\n  LOOP AT lt_customer INTO ls_customer.\n    WRITE: / ls_customer-custid, ls_customer-name, ls_customer-city, ls_customer-creditlimit.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the 'EMPID' and 'NAME' of all employees from the 'ZEMPLOYEE' table who have worked for more than 10 years in the company.",
        "response": "REPORT zemployee_experience.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE experience > 10.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-name.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of employees from the 'ZEMPLOYEE' table where the 'DEPARTMENT' is 'Sales'.",
        "response": "REPORT zemployee_department.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE department = 'Sales'.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-name, ls_employee-department.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to delete an order from the 'ZORDER' table whose 'ORDERID' is 'O001'.",
        "response": "REPORT zdelete_order.\n\nDATA: lv_orderid TYPE zorder-orderid VALUE 'O001'.\n\nDELETE FROM zorder WHERE orderid = lv_orderid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Order deleted successfully for Order ID: ', lv_orderid.\nELSE.\n  WRITE: / 'Error in deleting order for Order ID: ', lv_orderid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display a list of employees from the table 'ZEMPLOYEE' who are older than 50 years.",
        "response": "REPORT zemployee_age.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE age > 50.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-name, ls_employee-age.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the list of products from the 'ZPRODUCT' table whose 'STOCK' is less than 10.",
        "response": "REPORT zproduct_stock.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE stock < 10.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-name, ls_product-stock.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of products from the 'ZPRODUCT' table where the 'PRICE' is between 500 and 1000.",
        "response": "REPORT zproduct_price_range.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE price BETWEEN 500 AND 1000.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-productname, ls_product-price.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to delete a record from the 'ZPRODUCT' table given the 'PRODUCTID'.",
        "response": "REPORT zdelete_product.\n\nDATA: lv_productid TYPE zproduct-productid VALUE 'P001'.\n\nDELETE FROM zproduct WHERE productid = lv_productid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Product record deleted successfully for Product ID: ', lv_productid.\nELSE.\n  WRITE: / 'Error in deleting product record for Product ID: ', lv_productid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to calculate the average salary of employees from the 'ZEMPLOYEE' table.",
        "response": "REPORT zaverage_salary.\n\nDATA: lv_total_salary TYPE zemployee-salary,\n      lv_avg_salary TYPE zemployee-salary,\n      lv_count TYPE i.\n\nSELECT COUNT( * ) FROM zemployee INTO lv_count.\n\nIF lv_count > 0.\n  SELECT SUM( salary ) FROM zemployee INTO lv_total_salary.\n  lv_avg_salary = lv_total_salary / lv_count.\n  WRITE: / 'The average salary of employees is ', lv_avg_salary.\nELSE.\n  WRITE: / 'No employee records found'.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display a list of 'ZCUSTOMER' table where the 'COUNTRY' is 'USA' and 'CITY' is 'New York'.",
        "response": "REPORT zcustomer_usa_ny.\n\nDATA: lt_customer TYPE TABLE OF zcustomer,\n      ls_customer TYPE zcustomer.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zcustomer INTO TABLE lt_customer WHERE country = 'USA' AND city = 'New York'.\n\n  LOOP AT lt_customer INTO ls_customer.\n    WRITE: / ls_customer-custid, ls_customer-name, ls_customer-country, ls_customer-city.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to calculate the average salary of employees from the 'ZEMPLOYEE' table.",
        "response": "REPORT zaverage_salary.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee,\n      lv_total_salary TYPE zemployee-salary,\n      lv_average_salary TYPE zemployee-salary.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee.\n\n  LOOP AT lt_employee INTO ls_employee.\n    ADD ls_employee-salary TO lv_total_salary.\n  ENDLOOP.\n\n  lv_average_salary = lv_total_salary / lines( lt_employee ).\n\n  WRITE: / 'The average salary of employees is ', lv_average_salary."
    },
    {
        "prompt": "Write an ABAP program to update the salary of an employee in the 'ZEMPLOYEE' table with employee ID 'E001' to 6000.",
        "response": "REPORT zupdate_employee.\n\nDATA: ls_employee TYPE zemployee.\n\nls_employee-empid = 'E001'.\nls_employee-salary = 6000.\n\nUPDATE zemployee SET salary = ls_employee-salary WHERE empid = ls_employee-empid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Employee salary updated successfully for Employee ID: ', ls_employee-empid.\nELSE.\n  WRITE: / 'Error in updating employee salary for Employee ID: ', ls_employee-empid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to insert a new record into the 'ZEMPLOYEE' table.",
        "response": "REPORT zinsert_employee.\n\nDATA: ls_employee TYPE zemployee.\n\nls_employee-empid = '001'.\nls_employee-name = 'John Doe'.\nls_employee-joining_date = sy-datum.\n\nINSERT zemployee FROM ls_employee.\n\nIF sy-subrc = 0.\n  WRITE: / 'Employee record inserted successfully for Employee ID: ', ls_employee-empid.\nELSE.\n  WRITE: / 'Error in inserting employee record for Employee ID: ', ls_employee-empid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display the list of employees from the 'ZEMPLOYEE' table whose 'SALARY' is greater than 50000.",
        "response": "REPORT zemployee_salary.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE salary > 50000.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-name, ls_employee-salary.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the list of products from the 'ZPRODUCT' table whose 'CATEGORY' is 'Electronics' and 'PRICE' is less than 1000.",
        "response": "REPORT zproduct_category_price.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE category = 'Electronics' AND price < 1000.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-productname, ls_product-category, ls_product-price.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to update the 'PRICE' of a product in the 'ZPRODUCT' table given the 'PRODUCTID'.",
        "response": "REPORT zupdate_price.\n\nDATA: lv_productid TYPE zproduct-productid VALUE 'P001',\n      lv_new_price TYPE zproduct-price VALUE 1000.\n\nUPDATE zproduct SET price = lv_new_price WHERE productid = lv_productid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Product price updated successfully for Product ID: ', lv_productid.\nELSE.\n  WRITE: / 'Error in updating product price for Product ID: ', lv_productid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to update the 'SALARY' of an employee in the 'ZEMPLOYEE' table given the 'EMPID'.",
        "response": "REPORT zupdate_employee_salary.\n\nDATA: lv_empid TYPE zemployee-empid VALUE '001',\n      lv_new_salary TYPE zemployee-salary VALUE 6000.\n\nUPDATE zemployee SET salary = lv_new_salary WHERE empid = lv_empid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Salary updated successfully for Employee ID: ', lv_empid.\nELSE.\n  WRITE: / 'Error in updating salary for Employee ID: ', lv_empid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display the list of products from the 'ZPRODUCT' table whose 'STOCK' is less than 50.",
        "response": "REPORT zproduct_stock.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE stock < 50.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-productname, ls_product-stock.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to calculate the total 'QUANTITY' of each 'PRODUCT_ID' sold from the 'ZSALES' table.",
        "response": "REPORT ztotal_quantity.\n\nTYPES: BEGIN OF ty_sales,\n         product_id TYPE zsales-product_id,\n         quantity   TYPE zsales-quantity,\n       END OF ty_sales.\n\nDATA: lt_sales TYPE TABLE OF ty_sales,\n      ls_sales TYPE ty_sales,\n      lt_total_quantity TYPE SORTED TABLE OF ty_sales WITH UNIQUE KEY product_id.\n\nSTART-OF-SELECTION.\n\n  SELECT product_id, quantity FROM zsales INTO TABLE lt_sales.\n\n  LOOP AT lt_sales INTO ls_sales.\n    COLLECT ls_sales INTO lt_total_quantity.\n  ENDLOOP.\n\n  LOOP AT lt_total_quantity INTO ls_sales.\n    WRITE: / 'Product ID: ', ls_sales-product_id, ' Total Quantity: ', ls_sales-quantity.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the list of employees from the 'ZEMPLOYEE' table who have a 'SALARY' greater than 5000.",
        "response": "REPORT zemployee_salary.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE salary > 5000.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-empname, ls_employee-salary.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the list of employees from the 'ZEMPLOYEE' table whose 'JOINING_DATE' is in the current year.",
        "response": "REPORT zemployee_joining.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee,\n      lv_current_year TYPE sy-datum.\n\nGET TIME STAMP FIELD lv_current_year.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE YEAR( joining_date ) = YEAR( lv_current_year ).\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-name, ls_employee-joining_date.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the details of the most expensive product from the 'ZPRODUCT' table.",
        "response": "REPORT zmost_expensive_product.\n\nTYPES: BEGIN OF ty_product,\n         productid   TYPE zproduct-productid,\n         productname TYPE zproduct-productname,\n         price       TYPE zproduct-price,\n       END OF ty_product.\n\nDATA: lt_product TYPE TABLE OF ty_product,\n      ls_product TYPE ty_product,\n      lv_max_price TYPE zproduct-price.\n\nSTART-OF-SELECTION.\n\n  SELECT productid productname price FROM zproduct INTO TABLE lt_product ORDER BY price DESCENDING.\n\n  READ TABLE lt_product INTO ls_product INDEX 1.\n\n  IF sy-subrc = 0.\n    WRITE: / 'Most Expensive Product ID: ', ls_product-productid, 'Name: ', ls_product-productname, 'Price: ', ls_product-price.\n  ELSE.\n    WRITE: / 'No products found in ZPRODUCT table'.\n  ENDIF."
    },
    {
        "prompt": "Write an ABAP program to display a list of employees from the table 'ZEMPLOYEE' where the 'HIRE_DATE' is in the last 5 years.",
        "response": "REPORT zemployee_hire_date.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee,\n      lv_date TYPE sy-datum.\n\nGET TIME STAMP FIELD lv_date.\nlv_date = lv_date - 5 * 365.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE hire_date >= lv_date.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-name, ls_employee-hire_date.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to update the 'STATUS' field to 'Inactive' in the 'ZEMPLOYEE' table for employees who have not logged in for more than 30 days.",
        "response": "REPORT zupdate_employee_status.\n\nDATA: lv_date TYPE sy-datum,\n      lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee.\n\nlv_date = sy-datum - 30.\n\nSELECT * FROM zemployee INTO TABLE lt_employee WHERE last_login < lv_date.\n\nLOOP AT lt_employee INTO ls_employee.\n  UPDATE zemployee SET status = 'Inactive' WHERE empid = ls_employee-empid.\nENDLOOP.\n\nIF sy-subrc = 0.\n  WRITE: / 'Employee status updated successfully'.\nELSE.\n  WRITE: / 'Error in updating employee status'.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to update the 'STOCK' field of the 'ZPRODUCT' table to '0' for a given 'PRODUCTID'.",
        "response": "REPORT zupdate_stock.\n\nDATA: lv_productid TYPE zproduct-productid VALUE 'P001'.\n\nUPDATE zproduct SET stock = 0 WHERE productid = lv_productid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Stock updated successfully for Product ID: ', lv_productid.\nELSE.\n  WRITE: / 'Error in updating the stock for Product ID: ', lv_productid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display a list of sales orders from the table 'ZSALES_ORDER' where the 'ORDER_DATE' is in the last 30 days.",
        "response": "REPORT zsales_order_date.\n\nDATA: lt_sales_order TYPE TABLE OF zsales_order,\n      ls_sales_order TYPE zsales_order,\n      lv_date        TYPE sy-datum.\n\nlv_date = sy-datum - 30.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zsales_order INTO TABLE lt_sales_order WHERE order_date >= lv_date.\n\n  LOOP AT lt_sales_order INTO ls_sales_order.\n    WRITE: / ls_sales_order-orderid, ls_sales_order-custid, ls_sales_order-order_date.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to delete a customer from the 'ZCUSTOMER' table whose 'CUSTID' is 'C001'.",
        "response": "REPORT zdelete_customer.\n\nDATA: lv_custid TYPE zcustomer-custid VALUE 'C001'.\n\nDELETE FROM zcustomer WHERE custid = lv_custid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Customer deleted successfully for Customer ID: ', lv_custid.\nELSE.\n  WRITE: / 'Error in deleting customer for Customer ID: ', lv_custid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to calculate the total 'SALES_AMOUNT' from the 'ZSALES' table for each 'SALES_REGION'.",
        "response": "REPORT ztotal_sales.\n\nTYPES: BEGIN OF ty_sales,\n         sales_region  TYPE zsales-sales_region,\n         total_amount  TYPE zsales-sales_amount,\n       END OF ty_sales.\n\nDATA: lt_sales TYPE TABLE OF ty_sales,\n      ls_sales TYPE ty_sales.\n\nSTART-OF-SELECTION.\n\n  SELECT sales_region, SUM( sales_amount ) AS total_amount\n    FROM zsales\n    GROUP BY sales_region\n    INTO TABLE lt_sales.\n\n  LOOP AT lt_sales INTO ls_sales.\n    WRITE: / 'Sales Region: ', ls_sales-sales_region, 'Total Sales Amount: ', ls_sales-total_amount.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of products from the table 'ZPRODUCT' where the 'PRICE' is less than 100.",
        "response": "REPORT zproduct_price.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE price < 100.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-productname, ls_product-price.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to update the 'STOCK' of a product in the 'ZPRODUCT' table given the 'PRODUCTID'.",
        "response": "REPORT zupdate_product_stock.\n\nDATA: lv_productid TYPE zproduct-productid VALUE 'P001',\n      lv_new_stock TYPE zproduct-stock VALUE 50.\n\nUPDATE zproduct SET stock = lv_new_stock WHERE productid = lv_productid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Stock updated successfully for Product ID: ', lv_productid.\nELSE.\n  WRITE: / 'Error in updating stock for Product ID: ', lv_productid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display the total 'SALARY' of all employees in the 'ZEMPLOYEE' table.",
        "response": "REPORT ztotal_salary.\n\nDATA: lv_total_salary TYPE zemployee-salary.\n\nSTART-OF-SELECTION.\n\n  SELECT SUM( salary ) FROM zemployee INTO lv_total_salary.\n\n  WRITE: / 'The total salary of all employees is ', lv_total_salary."
    },
    {
        "prompt": "Write an ABAP program to display a list of products from the 'ZPRODUCT' table where the 'PRODUCTNAME' starts with 'A'.",
        "response": "REPORT zproduct_start_a.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE productname LIKE 'A%'.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-productname, ls_product-price.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to calculate the average 'PRICE' of products from the 'ZPRODUCT' table whose 'CATEGORY' is 'Electronics'.",
        "response": "REPORT zaverage_price.\n\nDATA: lv_category TYPE zproduct-category VALUE 'Electronics',\n      lv_avg_price TYPE zproduct-price.\n\nSELECT AVG( price ) FROM zproduct INTO lv_avg_price WHERE category = lv_category.\n\nIF sy-subrc = 0.\n  WRITE: / 'The average price for category: ', lv_category, ' is ', lv_avg_price.\nELSE.\n  WRITE: / 'Error in calculating the average price for category: ', lv_category.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to calculate the average salary of employees in the 'ZEMPLOYEE' table.",
        "response": "REPORT zaverage_salary.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee,\n      lv_total_salary TYPE zemployee-salary,\n      lv_average_salary TYPE zemployee-salary.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee.\n\n  LOOP AT lt_employee INTO ls_employee.\n    ADD ls_employee-salary TO lv_total_salary.\n  ENDLOOP.\n\n  lv_average_salary = lv_total_salary / lines( lt_employee ).\n\n  WRITE: / 'The average salary of employees is ', lv_average_salary."
    },
    {
        "prompt": "Write an ABAP program to update the 'SALARY' of an employee in the 'ZEMPLOYEE' table given the 'EMPID'.",
        "response": "REPORT zupdate_salary.\n\nDATA: lv_empid TYPE zemployee-empid VALUE 'E001',\n      lv_new_salary TYPE zemployee-salary VALUE 6000.\n\nUPDATE zemployee SET salary = lv_new_salary WHERE empid = lv_empid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Salary updated successfully for Employee ID: ', lv_empid.\nELSE.\n  WRITE: / 'Error in updating salary for Employee ID: ', lv_empid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display a list of products from the table 'ZPRODUCT' where the 'PRICE' is greater than 500.",
        "response": "REPORT zproduct_price.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE price > 500.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-productname, ls_product-price.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of employees from the 'ZEMPLOYEE' table who joined after '01.01.2020'.",
        "response": "REPORT zemployee_join_date.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee,\n      lv_join_date TYPE zemployee-join_date VALUE '20200101'.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE join_date > lv_join_date.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-name, ls_employee-join_date.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program that reads data from the 'ZPRODUCT' table and displays it in an ALV grid, sorted by 'PRICE' in ascending order.",
        "response": "REPORT zdisplay_product.\n\nTYPES: BEGIN OF ty_product,\n         productid   TYPE zproduct-productid,\n         productname TYPE zproduct-productname,\n         price       TYPE zproduct-price,\n       END OF ty_product.\n\nDATA: lt_product TYPE TABLE OF ty_product,\n      ls_product TYPE ty_product,\n      lo_alv     TYPE REF TO cl_salv_table.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product ORDER BY price ASCENDING.\n\n  cl_salv_table=>factory( IMPORTING r_salv_table = lo_alv\n                          CHANGING  t_table      = lt_product ).\n\n  lo_alv->display( )."
    },
    {
        "prompt": "Write an ABAP program to display a list of 'ZEMPLOYEE' table where the 'DEPARTMENT' is 'Sales' and 'SALARY' is greater than '5000'.",
        "response": "REPORT zemployee_sales.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE department = 'Sales' AND salary > 5000.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-name, ls_employee-department, ls_employee-salary.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the list of employees from the 'ZEMPLOYEE' table who have joined after the year 2015.",
        "response": "REPORT zemployee_join_date.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee,\n      lv_date TYPE dats VALUE '20150101'.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE join_date > lv_date.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-empname, ls_employee-join_date.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of sales orders from the table 'ZSALES_ORDER' where the 'ORDER_STATUS' is 'Delivered'.",
        "response": "REPORT zsales_order_status.\n\nDATA: lt_sales_order TYPE TABLE OF zsales_order,\n      ls_sales_order TYPE zsales_order.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zsales_order INTO TABLE lt_sales_order WHERE order_status = 'Delivered'.\n\n  LOOP AT lt_sales_order INTO ls_sales_order.\n    WRITE: / ls_sales_order-orderid, ls_sales_order-custid, ls_sales_order-order_status.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to update the 'SALARY' field in the 'ZEMPLOYEE' table by 10% for those employees who are in the 'HR' department.",
        "response": "REPORT zupdate_salary.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE department = 'HR'.\n\n  LOOP AT lt_employee INTO ls_employee.\n    ls_employee-salary = ls_employee-salary * 1.1.\n    MODIFY zemployee FROM ls_employee.\n  ENDLOOP.\n\n  IF sy-subrc = 0.\n    WRITE: / 'Salary updated successfully for HR department'.\n  ELSE.\n    WRITE: / 'Error in updating salary for HR department'.\n  ENDIF."
    },
    {
        "prompt": "Write an ABAP program to update the 'ORDER_STATUS' of an order in the 'ZORDER' table given the 'ORDERID'.",
        "response": "REPORT zupdate_order_status.\n\nDATA: lv_orderid TYPE zorder-orderid VALUE 'O001',\n      lv_new_status TYPE zorder-order_status VALUE 'Completed'.\n\nUPDATE zorder SET order_status = lv_new_status WHERE orderid = lv_orderid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Order status updated successfully for Order ID: ', lv_orderid.\nELSE.\n  WRITE: / 'Error in updating order status for Order ID: ', lv_orderid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to delete a record from the 'ZEMPLOYEE' table for a given 'EMPID'.",
        "response": "REPORT zdelete_employee.\n\nDATA: lv_empid TYPE zemployee-empid VALUE '001'.\n\nDELETE FROM zemployee WHERE empid = lv_empid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Employee record deleted successfully for Employee ID: ', lv_empid.\nELSE.\n  WRITE: / 'Error in deleting employee record for Employee ID: ', lv_empid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display a list of customers from the 'ZCUSTOMER' table who are from a specific city.",
        "response": "REPORT zcustomer_city.\n\nDATA: lt_customer TYPE TABLE OF zcustomer,\n      ls_customer TYPE zcustomer,\n      lv_city TYPE zcustomer-city VALUE 'New York'.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zcustomer INTO TABLE lt_customer WHERE city = lv_city.\n\n  LOOP AT lt_customer INTO ls_customer.\n    WRITE: / ls_customer-custid, ls_customer-name, ls_customer-city.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of orders from the 'ZORDER' table where the 'ORDERDATE' is within the last 30 days.",
        "response": "REPORT zorder_date.\n\nDATA: lt_order TYPE TABLE OF zorder,\n      ls_order TYPE zorder,\n      lv_date TYPE zorder-orderdate.\n\nlv_date = sy-datum - 30.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zorder INTO TABLE lt_order WHERE orderdate >= lv_date.\n\n  LOOP AT lt_order INTO ls_order.\n    WRITE: / ls_order-orderid, ls_order-custid, ls_order-orderdate.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to delete a customer record from the 'ZCUSTOMER' table given the 'CUSTID'.",
        "response": "REPORT zdelete_customer.\n\nDATA: lv_custid TYPE zcustomer-custid VALUE '001'.\n\nDELETE FROM zcustomer WHERE custid = lv_custid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Customer record deleted successfully for Customer ID: ', lv_custid.\nELSE.\n  WRITE: / 'Error in deleting customer record for Customer ID: ', lv_custid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to update the 'SALARY' of an employee in the 'ZEMPLOYEE' table for a given 'EMPID'.",
        "response": "REPORT zupdate_employee_salary.\n\nDATA: lv_empid TYPE zemployee-empid VALUE 'E001',\n      lv_new_salary TYPE zemployee-salary VALUE 7000.\n\nUPDATE zemployee SET salary = lv_new_salary WHERE empid = lv_empid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Salary updated successfully for Employee ID: ', lv_empid.\nELSE.\n  WRITE: / 'Error in updating salary for Employee ID: ', lv_empid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display the 'CUSTOMERID' and 'NAME' of all customers from the 'ZCUSTOMER' table whose 'COUNTRY' is 'USA'.",
        "response": "REPORT zcustomer_country.\n\nDATA: lt_customer TYPE TABLE OF zcustomer,\n      ls_customer TYPE zcustomer.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zcustomer INTO TABLE lt_customer WHERE country = 'USA'.\n\n  LOOP AT lt_customer INTO ls_customer.\n    WRITE: / ls_customer-customerid, ls_customer-name.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the number of products in each category from the 'ZPRODUCT' table.",
        "response": "REPORT zproduct_category_count.\n\nTYPES: BEGIN OF ty_category_count,\n         category TYPE zproduct-category,\n         count    TYPE i,\n       END OF ty_category_count.\n\nDATA: lt_category_count TYPE TABLE OF ty_category_count,\n      ls_category_count TYPE ty_category_count.\n\nSTART-OF-SELECTION.\n\n  SELECT category, COUNT( * ) AS count FROM zproduct GROUP BY category INTO TABLE lt_category_count.\n\n  LOOP AT lt_category_count INTO ls_category_count.\n    WRITE: / 'Category: ', ls_category_count-category, 'Count: ', ls_category_count-count.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to delete a row from the 'ZPRODUCT' table for a given 'PRODUCTID'.",
        "response": "REPORT zdelete_product.\n\nDATA: lv_productid TYPE zproduct-productid VALUE 'P002'.\n\nDELETE FROM zproduct WHERE productid = lv_productid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Product deleted successfully for Product ID: ', lv_productid.\nELSE.\n  WRITE: / 'Error in deleting product for Product ID: ', lv_productid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to update the 'SALARY' of an employee in the 'ZEMPLOYEE' table given the 'EMPID'.",
        "response": "REPORT zupdate_employee.\n\nDATA: lv_empid TYPE zemployee-empid VALUE 'E001',\n      lv_new_salary TYPE zemployee-salary VALUE 6000.\n\nUPDATE zemployee SET salary = lv_new_salary WHERE empid = lv_empid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Employee salary updated successfully for Employee ID: ', lv_empid.\nELSE.\n  WRITE: / 'Error in updating employee salary for Employee ID: ', lv_empid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to update the 'QUANTITY' of a product in the 'ZPRODUCT' table given the 'PRODUCTID'.",
        "response": "REPORT zupdate_quantity.\n\nDATA: lv_productid TYPE zproduct-productid VALUE '001',\n      lv_quantity TYPE zproduct-quantity VALUE 50.\n\nUPDATE zproduct SET quantity = lv_quantity WHERE productid = lv_productid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Quantity updated successfully for Product ID: ', lv_productid.\nELSE.\n  WRITE: / 'Error in updating quantity for Product ID: ', lv_productid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display a list of customers from the 'ZCUSTOMER' table who are from 'San Francisco' and whose 'CREDITLIMIT' is less than 2000.",
        "response": "REPORT zcustomer_city_credit.\n\nDATA: lt_customer TYPE TABLE OF zcustomer,\n      ls_customer TYPE zcustomer,\n      lv_city TYPE zcustomer-city VALUE 'San Francisco'.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zcustomer INTO TABLE lt_customer WHERE city = lv_city AND creditlimit < 2000.\n\n  LOOP AT lt_customer INTO ls_customer.\n    WRITE: / ls_customer-custid, ls_customer-name, ls_customer-city, ls_customer-creditlimit.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of employees from the 'ZEMPLOYEE' table who are in the 'Marketing' department.",
        "response": "REPORT zemployee_department.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE department = 'Marketing'.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-name, ls_employee-department.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to delete a record from the 'ZCUSTOMER' table given the 'CUSTID'.",
        "response": "REPORT zdelete_customer.\n\nDATA: lv_custid TYPE zcustomer-custid VALUE 'C001'.\n\nDELETE FROM zcustomer WHERE custid = lv_custid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Customer record deleted successfully for Customer ID: ', lv_custid.\nELSE.\n  WRITE: / 'Error in deleting customer record for Customer ID: ', lv_custid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to update the salary of an employee in the 'ZEMPLOYEE' table given the 'EMPID'.",
        "response": "REPORT zupdate_salary.\n\nDATA: lv_empid TYPE zemployee-empid VALUE '001',\n      lv_new_salary TYPE zemployee-salary VALUE 6000.\n\nUPDATE zemployee SET salary = lv_new_salary WHERE empid = lv_empid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Salary updated successfully for Employee ID: ', lv_empid.\nELSE.\n  WRITE: / 'Error in updating salary for Employee ID: ', lv_empid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display the total 'ORDER_AMOUNT' from the 'ZORDER' table for each 'CUSTOMER'.",
        "response": "REPORT ztotal_order.\n\nTYPES: BEGIN OF ty_order,\n         customer   TYPE zorder-customer,\n         total_amount   TYPE zorder-order_amount,\n       END OF ty_order.\n\nDATA: lt_order TYPE TABLE OF ty_order,\n      ls_order TYPE ty_order.\n\nSTART-OF-SELECTION.\n\n  SELECT customer, SUM( order_amount ) AS total_amount\n    FROM zorder\n    GROUP BY customer\n    INTO TABLE lt_order.\n\n  LOOP AT lt_order INTO ls_order.\n    WRITE: / 'Customer: ', ls_order-customer, 'Total Order Amount: ', ls_order-total_amount.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the 'CUSTOMERID' and total 'QUANTITY' from the 'ZSALES_ORDER' table for each customer.",
        "response": "REPORT zcustomer_total_quantity.\n\nTYPES: BEGIN OF ty_sales,\n         customerid TYPE zsales_order-customerid,\n         quantity   TYPE zsales_order-quantity,\n       END OF ty_sales.\n\nDATA: lt_sales TYPE TABLE OF ty_sales,\n      ls_sales TYPE ty_sales.\n\nSTART-OF-SELECTION.\n\n  SELECT customerid, SUM( quantity ) AS quantity FROM zsales_order INTO TABLE lt_sales GROUP BY customerid.\n\n  LOOP AT lt_sales INTO ls_sales.\n    WRITE: / 'Customer ID: ', ls_sales-customerid, 'Total Quantity: ', ls_sales-quantity.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to calculate the total 'AMOUNT' field from the 'ZSALES_ORDER' table for a given 'CUSTOMERID'.",
        "response": "REPORT ztotal_amount.\n\nDATA: lv_custid TYPE zsales_order-custid VALUE 'C001',\n      lv_total_amount TYPE zsales_order-amount.\n\nSELECT SUM( amount ) FROM zsales_order INTO lv_total_amount WHERE custid = lv_custid.\n\nIF sy-subrc = 0.\n  WRITE: / 'The total amount for Customer ID: ', lv_custid, ' is ', lv_total_amount.\nELSE.\n  WRITE: / 'Error in calculating the total amount for Customer ID: ', lv_custid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to calculate the total 'QUANTITY' of all products from the 'ZSALES_ORDER' table.",
        "response": "REPORT ztotal_quantity.\n\nDATA: lv_total_quantity TYPE zsales_order-quantity.\n\nSELECT SUM( quantity ) FROM zsales_order INTO lv_total_quantity.\n\nIF sy-subrc = 0.\n  WRITE: / 'The total quantity of all products is: ', lv_total_quantity.\nELSE.\n  WRITE: / 'Error in calculating the total quantity of all products.'.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to delete an employee record from the 'ZEMPLOYEE' table for a given 'EMPID'.",
        "response": "REPORT zdelete_employee.\n\nDATA: lv_empid TYPE zemployee-empid VALUE 'E001'.\n\nDELETE FROM zemployee WHERE empid = lv_empid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Employee record deleted successfully for Employee ID: ', lv_empid.\nELSE.\n  WRITE: / 'Error in deleting employee record for Employee ID: ', lv_empid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display a list of employees from the table 'ZEMPLOYEE' where the 'DEPARTMENT' is 'Sales'.",
        "response": "REPORT zemployee_department.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE department = 'Sales'.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-empname, ls_employee-department.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the list of customers from the 'ZCUSTOMER' table who live in 'New York' or 'Los Angeles'.",
        "response": "REPORT zcustomer_cities.\n\nDATA: lt_customer TYPE TABLE OF zcustomer,\n      ls_customer TYPE zcustomer.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zcustomer INTO TABLE lt_customer WHERE city IN ('New York', 'Los Angeles').\n\n  LOOP AT lt_customer INTO ls_customer.\n    WRITE: / ls_customer-custid, ls_customer-name, ls_customer-city.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to update the 'ADDRESS' of a customer in the 'ZCUSTOMER' table given the 'CUSTID'.",
        "response": "REPORT zupdate_customer_address.\n\nDATA: lv_custid TYPE zcustomer-custid VALUE 'C001',\n      lv_new_address TYPE zcustomer-address VALUE '123 New Street, New City'.\n\nUPDATE zcustomer SET address = lv_new_address WHERE custid = lv_custid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Customer address updated successfully for Customer ID: ', lv_custid.\nELSE.\n  WRITE: / 'Error in updating customer address for Customer ID: ', lv_custid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to calculate the average 'SALARY' field from the 'ZEMPLOYEE' table for a given 'DEPARTMENT'.",
        "response": "REPORT zaverage_salary.\n\nDATA: lv_department TYPE zemployee-department VALUE 'HR',\n      lv_average_salary TYPE zemployee-salary.\n\nSELECT AVG( salary ) FROM zemployee INTO lv_average_salary WHERE department = lv_department.\n\nIF sy-subrc = 0.\n  WRITE: / 'The average salary for Department: ', lv_department, ' is ', lv_average_salary.\nELSE.\n  WRITE: / 'Error in calculating the average salary for Department: ', lv_department.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to insert a new record into the 'ZEMPLOYEE' table.",
        "response": "REPORT zinsert_employee.\n\nDATA: ls_employee TYPE zemployee.\n\nls_employee-empid = 'E005'.\nls_employee-name = 'John Doe'.\nls_employee-department = 'Marketing'.\nls_employee-salary = 5500.\n\nINSERT INTO zemployee VALUES ls_employee.\n\nIF sy-subrc = 0.\n  WRITE: / 'Employee record inserted successfully for Employee ID: ', ls_employee-empid.\nELSE.\n  WRITE: / 'Error in inserting employee record for Employee ID: ', ls_employee-empid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display the list of employees from the 'ZEMPLOYEE' table whose 'SALARY' is greater than 5000.",
        "response": "REPORT zemployee_salary.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE salary > 5000.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-name, ls_employee-salary.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of employees from the 'ZEMPLOYEE' table who are aged above 40.",
        "response": "REPORT zemployee_age.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee,\n      lv_age TYPE zemployee-age VALUE 40.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE age > lv_age.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-empname, ls_employee-age.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of employees from the 'ZEMPLOYEE' table who have a salary greater than 5000.",
        "response": "REPORT zemployee_salary.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE salary > 5000.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-empname, ls_employee-salary.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of orders from the 'ZORDER' table where the 'ORDER_DATE' is in the last 7 days.",
        "response": "REPORT zorder_lastweek.\n\nDATA: lt_order TYPE TABLE OF zorder,\n      ls_order TYPE zorder,\n      lv_today TYPE sy-datum,\n      lv_7_days TYPE sy-datum.\n\nGET TIME STAMP FIELD lv_today.\nlv_7_days = lv_today - 7.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zorder INTO TABLE lt_order WHERE order_date BETWEEN lv_7_days AND lv_today.\n\n  LOOP AT lt_order INTO ls_order.\n    WRITE: / ls_order-orderid, ls_order-customerid, ls_order-order_date.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to delete a record from the 'ZEMPLOYEE' table given the 'EMPID'.",
        "response": "REPORT zdelete_employee.\n\nDATA: lv_empid TYPE zemployee-empid VALUE 'E002'.\n\nDELETE FROM zemployee WHERE empid = lv_empid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Employee record deleted successfully for Employee ID: ', lv_empid.\nELSE.\n  WRITE: / 'Error in deleting employee record for Employee ID: ', lv_empid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to delete a record from the 'ZEMPLOYEE' table given the 'EMPID'.",
        "response": "REPORT zdelete_employee.\n\nDATA: lv_empid TYPE zemployee-empid VALUE '001'.\n\nDELETE FROM zemployee WHERE empid = lv_empid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Employee record deleted successfully for Employee ID: ', lv_empid.\nELSE.\n  WRITE: / 'Error in deleting employee record for Employee ID: ', lv_empid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to update the 'SALARY' of an employee in the 'ZEMPLOYEE' table for a given 'EMPID'.",
        "response": "REPORT zupdate_employee_salary.\n\nDATA: ls_employee TYPE zemployee.\n\nls_employee-empid = 'E001'.\nls_employee-salary = 6000.\n\nUPDATE zemployee SET salary = ls_employee-salary WHERE empid = ls_employee-empid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Employee salary updated successfully for Employee ID: ', ls_employee-empid.\nELSE.\n  WRITE: / 'Error in updating employee salary for Employee ID: ', ls_employee-empid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display a list of products from the 'ZPRODUCT' table where the 'PRICE' is greater than 500 and 'STOCK' is greater than 10.",
        "response": "REPORT zproduct_price_stock.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE price > 500 AND stock > 10.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-productname, ls_product-price, ls_product-stock.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the list of sales orders from the 'ZSALES_ORDER' table where the 'ORDER_DATE' is in the last 30 days.",
        "response": "REPORT zsales_order_date.\n\nDATA: lt_sales_order TYPE TABLE OF zsales_order,\n      ls_sales_order TYPE zsales_order,\n      lv_date TYPE sy-datum.\n\nlv_date = sy-datum - 30.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zsales_order INTO TABLE lt_sales_order WHERE order_date >= lv_date.\n\n  LOOP AT lt_sales_order INTO ls_sales_order.\n    WRITE: / ls_sales_order-orderid, ls_sales_order-custid, ls_sales_order-productid, ls_sales_order-order_date.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program that reads data from the 'ZORDER' table and displays it in an ALV grid, sorted by 'ORDER_DATE' in descending order.",
        "response": "REPORT zdisplay_order.\n\nTYPES: BEGIN OF ty_order,\n         orderid    TYPE zorder-orderid,\n         customerid TYPE zorder-customerid,\n         productid  TYPE zorder-productid,\n         order_date TYPE zorder-order_date,\n       END OF ty_order.\n\nDATA: lt_order TYPE TABLE OF ty_order,\n      ls_order TYPE ty_order,\n      lo_alv   TYPE REF TO cl_salv_table.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zorder INTO TABLE lt_order ORDER BY order_date DESCENDING.\n\n  cl_salv_table=>factory( IMPORTING r_salv_table = lo_alv\n                          CHANGING  t_table      = lt_order ).\n\n  lo_alv->display( )."
    },
    {
        "prompt": "Write an ABAP program to display the list of employees from the 'ZEMPLOYEE' table who joined before a specific date.",
        "response": "REPORT zemployee_joining_date.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee,\n      lv_date TYPE sy-datum VALUE '20200101'.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE joindate < @lv_date.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-empname, ls_employee-joindate.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the list of employees from the 'ZEMPLOYEE' table who have a 'SALARY' greater than 50000.",
        "response": "REPORT zemployee_salary.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE salary > 50000.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-name, ls_employee-salary.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to update the 'PRICE' of a product in the 'ZPRODUCT' table given the 'PRODUCTID'.",
        "response": "REPORT zupdate_product_price.\n\nDATA: lv_productid TYPE zproduct-productid VALUE '001',\n      lv_new_price TYPE zproduct-price VALUE 1000.\n\nUPDATE zproduct SET price = lv_new_price WHERE productid = lv_productid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Product price updated successfully for Product ID: ', lv_productid.\nELSE.\n  WRITE: / 'Error in updating product price for Product ID: ', lv_productid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to delete a record from the 'ZORDER' table where the 'ORDERID' is 'O002'.",
        "response": "REPORT zdelete_order.\n\nDATA: lv_orderid TYPE zorder-orderid VALUE 'O002'.\n\nDELETE FROM zorder WHERE orderid = lv_orderid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Order deleted successfully for Order ID: ', lv_orderid.\nELSE.\n  WRITE: / 'Error in deleting order for Order ID: ', lv_orderid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display a list of customers from the 'ZCUSTOMER' table where the 'COUNTRY' is 'Germany' and 'CREDITLIMIT' is greater than 10000.",
        "response": "REPORT zcustomer_germany_credit.\n\nDATA: lt_customer TYPE TABLE OF zcustomer,\n      ls_customer TYPE zcustomer.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zcustomer INTO TABLE lt_customer WHERE country = 'Germany' AND creditlimit > 10000.\n\n  LOOP AT lt_customer INTO ls_customer.\n    WRITE: / ls_customer-custid, ls_customer-name, ls_customer-country, ls_customer-creditlimit.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program that reads data from the 'ZSALES_ORDER' table and displays it in an ALV grid, sorted by 'TOTAL_AMOUNT' in descending order.",
        "response": "REPORT zdisplay_sales_order.\n\nTYPES: BEGIN OF ty_sales_order,\n         orderid      TYPE zsales_order-orderid,\n         customerid   TYPE zsales_order-customerid,\n         productid    TYPE zsales_order-productid,\n         total_amount TYPE zsales_order-total_amount,\n       END OF ty_sales_order.\n\nDATA: lt_sales_order TYPE TABLE OF ty_sales_order,\n      ls_sales_order TYPE ty_sales_order,\n      lo_alv        TYPE REF TO cl_salv_table.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zsales_order INTO TABLE lt_sales_order ORDER BY total_amount DESCENDING.\n\n  cl_salv_table=>factory( IMPORTING r_salv_table = lo_alv\n                          CHANGING  t_table      = lt_sales_order ).\n\n  lo_alv->display( )."
    },
    {
        "prompt": "Write an ABAP program to display the details of the 'ZEMPLOYEE' table in an ALV grid.",
        "response": "REPORT zdisplay_employee.\n\nTYPES: BEGIN OF ty_employee,\n         empid   TYPE zemployee-empid,\n         name    TYPE zemployee-name,\n         deptid  TYPE zemployee-deptid,\n         salary  TYPE zemployee-salary,\n       END OF ty_employee.\n\nDATA: lt_employee TYPE TABLE OF ty_employee,\n      ls_employee TYPE ty_employee,\n      lo_alv      TYPE REF TO cl_salv_table.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee.\n\n  cl_salv_table=>factory( IMPORTING r_salv_table = lo_alv\n                          CHANGING  t_table      = lt_employee ).\n\n  lo_alv->display( )."
    },
    {
        "prompt": "Write an ABAP program to calculate the sum of all 'SALARY' in the 'ZEMPLOYEE' table.",
        "response": "REPORT zsum_salary.\n\nDATA: lv_sum TYPE p DECIMALS 2.\n\nSELECT SUM( salary ) FROM zemployee INTO lv_sum.\n\nWRITE: / 'The total salary of all employees is: ', lv_sum."
    },
    {
        "prompt": "Write an ABAP program to calculate the sum of two numbers using a function module.",
        "response": "REPORT zsum.\n\nDATA: lv_num1 TYPE i VALUE 5,\n      lv_num2 TYPE i VALUE 10,\n      lv_sum  TYPE i.\n\nCALL FUNCTION 'ZCALCULATE_SUM'\n  EXPORTING\n    iv_num1 = lv_num1\n    iv_num2 = lv_num2\n  IMPORTING\n    ev_sum  = lv_sum.\n\nWRITE: / 'The sum of ', lv_num1, ' and ', lv_num2, ' is ', lv_sum.\n\n*Function Module\nFUNCTION ZCALCULATE_SUM.\n  DATA: lv_sum TYPE i.\n  lv_sum = iv_num1 + iv_num2.\n  ev_sum = lv_sum.\nENDFUNCTION."
    },
    {
        "prompt": "Write an ABAP program to display a list of customers from the 'ZCUSTOMER' table where the 'COUNTRY' is 'USA'.",
        "response": "REPORT zcustomer_usa.\n\nDATA: lt_customer TYPE TABLE OF zcustomer,\n      ls_customer TYPE zcustomer.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zcustomer INTO TABLE lt_customer WHERE country = 'USA'.\n\n  LOOP AT lt_customer INTO ls_customer.\n    WRITE: / ls_customer-custid, ls_customer-name, ls_customer-country.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to update the 'PRICE' of a product in the 'ZPRODUCT' table for a given 'PRODUCTID'.",
        "response": "REPORT zupdate_product_price.\n\nDATA: lv_productid TYPE zproduct-productid VALUE 'P001',\n      lv_new_price TYPE zproduct-price VALUE 1500.\n\nUPDATE zproduct SET price = lv_new_price WHERE productid = lv_productid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Product price updated successfully for Product ID: ', lv_productid.\nELSE.\n  WRITE: / 'Error in updating product price for Product ID: ', lv_productid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to update the 'STATUS' field in the 'ZORDER' table to 'DELIVERED' for all orders that have a 'DELIVERY_DATE' less than or equal to today's date.",
        "response": "REPORT zupdate_order_status.\n\nDATA: lt_order TYPE TABLE OF zorder,\n      ls_order TYPE zorder,\n      lv_today TYPE sy-datum.\n\nGET TIME STAMP FIELD lv_today.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zorder INTO TABLE lt_order WHERE delivery_date <= lv_today.\n\n  LOOP AT lt_order INTO ls_order.\n    ls_order-status = 'DELIVERED'.\n    MODIFY zorder FROM ls_order.\n  ENDLOOP.\n\n  IF sy-subrc = 0.\n    WRITE: / 'Order status updated successfully'.\n  ELSE.\n    WRITE: / 'Error in updating order status'.\n  ENDIF."
    },
    {
        "prompt": "Write an ABAP program to calculate the total sales for each product in the 'ZSALES_ORDER' table.",
        "response": "REPORT ztotal_sales.\n\nTYPES: BEGIN OF ty_sales_order,\n         productid   TYPE zsales_order-productid,\n         quantity    TYPE zsales_order-quantity,\n         price       TYPE zsales_order-price,\n       END OF ty_sales_order.\n\nDATA: lt_sales_order TYPE TABLE OF ty_sales_order,\n      ls_sales_order TYPE ty_sales_order,\n      lt_total_sales TYPE SORTED TABLE OF ty_sales_order WITH UNIQUE KEY productid.\n\nSTART-OF-SELECTION.\n\n  SELECT productid, quantity, price FROM zsales_order INTO TABLE lt_sales_order.\n\n  LOOP AT lt_sales_order INTO ls_sales_order.\n    COLLECT ls_sales_order INTO lt_total_sales.\n  ENDLOOP.\n\n  LOOP AT lt_total_sales INTO ls_sales_order.\n    WRITE: / 'Product ID: ', ls_sales_order-productid, ' Total Sales: ', ls_sales_order-quantity * ls_sales_order-price.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to update the price of a product in the 'ZPRODUCT' table given the 'PRODUCTID'.",
        "response": "REPORT zupdate_product_price.\n\nDATA: lv_productid TYPE zproduct-productid VALUE 'P002',\n      lv_new_price TYPE zproduct-price VALUE 1500.\n\nUPDATE zproduct SET price = lv_new_price WHERE productid = lv_productid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Product price updated successfully for Product ID: ', lv_productid.\nELSE.\n  WRITE: / 'Error in updating product price for Product ID: ', lv_productid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display the list of employees from the 'ZEMPLOYEE' table who joined in the year 2020.",
        "response": "REPORT zemployee_join_date.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE YEAR( joining_date ) = 2020.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-name, ls_employee-joining_date.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the list of products from the 'ZPRODUCT' table whose 'CATEGORY' is 'Furniture' and 'PRICE' is less than 500.",
        "response": "REPORT zproduct_category_price.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE category = 'Furniture' AND price < 500.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-productname, ls_product-category, ls_product-price.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the list of customers from the 'ZCUSTOMER' table who have made purchases above a certain amount in the 'ZSALES_ORDER' table.",
        "response": "REPORT zcustomer_sales.\n\nTYPES: BEGIN OF ty_customer_sales,\n         custid TYPE zcustomer-custid,\n         name   TYPE zcustomer-name,\n         total_sales TYPE zsales_order-sales_amount,\n       END OF ty_customer_sales.\n\nDATA: lt_customer_sales TYPE TABLE OF ty_customer_sales,\n      ls_customer_sales TYPE ty_customer_sales,\n      lv_sales_amount TYPE zsales_order-sales_amount VALUE 5000.\n\nSTART-OF-SELECTION.\n\n  SELECT c~custid, c~name, SUM( s~sales_amount ) AS total_sales\n    FROM zcustomer AS c\n    JOIN zsales_order AS s ON s~custid = c~custid\n    GROUP BY c~custid, c~name\n    HAVING total_sales > lv_sales_amount\n    INTO TABLE lt_customer_sales.\n\n  LOOP AT lt_customer_sales INTO ls_customer_sales.\n    WRITE: / ls_customer_sales-custid, ls_customer_sales-name, ls_customer_sales-total_sales.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of products from the 'ZPRODUCT' table where the 'PRICE' is more than 500.",
        "response": "REPORT zproduct_price.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE price > 500.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-productname, ls_product-price.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the list of employees from the 'ZEMPLOYEE' table who have worked for more than 10 years.",
        "response": "REPORT zemployee_tenure.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee,\n      lv_current_year TYPE sy-datum.\n\nGET TIME STAMP FIELD lv_current_year.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE ( lv_current_year - joining_year ) > 10.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-empname, ls_employee-joining_year.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of employees from the 'ZEMPLOYEE' table who joined in the last year.",
        "response": "REPORT zemployee_last_year.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee,\n      lv_last_year TYPE sy-datum.\n\nlv_last_year = sy-datum - 365.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE joindate BETWEEN lv_last_year AND sy-datum.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-empname, ls_employee-joindate.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of sales orders from the 'ZSALES_ORDER' table where the 'ORDER_STATUS' is 'Pending'.",
        "response": "REPORT zsales_order_status.\n\nDATA: lt_sales_order TYPE TABLE OF zsales_order,\n      ls_sales_order TYPE zsales_order.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zsales_order INTO TABLE lt_sales_order WHERE order_status = 'Pending'.\n\n  LOOP AT lt_sales_order INTO ls_sales_order.\n    WRITE: / ls_sales_order-orderid, ls_sales_order-custid, ls_sales_order-order_status.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of employees from the table 'ZEMPLOYEE' where the 'DEPARTMENT' is 'Sales'.",
        "response": "REPORT zemployee_department.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE department = 'Sales'.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-name, ls_employee-department.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the list of customers from the 'ZCUSTOMER' table whose 'COUNTRY' is 'USA'.",
        "response": "REPORT zcustomer_country.\n\nDATA: lt_customer TYPE TABLE OF zcustomer,\n      ls_customer TYPE zcustomer.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zcustomer INTO TABLE lt_customer WHERE country = 'USA'.\n\n  LOOP AT lt_customer INTO ls_customer.\n    WRITE: / ls_customer-custid, ls_customer-name, ls_customer-country.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the list of orders from the 'ZORDER' table where the 'ORDER_DATE' is in the current year.",
        "response": "REPORT zorder_current_year.\n\nDATA: lt_order TYPE TABLE OF zorder,\n      ls_order TYPE zorder,\n      lv_current_year TYPE sy-datum.\n\nlv_current_year = sy-datum(4).\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zorder INTO TABLE lt_order WHERE order_date+0(4) = lv_current_year.\n\n  LOOP AT lt_order INTO ls_order.\n    WRITE: / ls_order-orderid, ls_order-custid, ls_order-order_date.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the 'EMPLOYEE_NAME' and 'SALARY' from the 'ZEMPLOYEE' table for employees who have a 'SALARY' less than 2000.",
        "response": "REPORT zemployee_salary.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE salary < 2000.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / 'Employee Name: ', ls_employee-name, ' Salary: ', ls_employee-salary.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to calculate the total 'QUANTITY' of products sold for a given 'PRODUCTID' from the 'ZSALES_ORDER' table.",
        "response": "REPORT ztotal_quantity.\n\nDATA: lv_productid TYPE zsales_order-productid VALUE 'P001',\n      lv_total_quantity TYPE zsales_order-quantity.\n\nSELECT SUM( quantity ) FROM zsales_order INTO lv_total_quantity WHERE productid = lv_productid.\n\nIF sy-subrc = 0.\n  WRITE: / 'The total quantity sold for Product ID: ', lv_productid, ' is ', lv_total_quantity.\nELSE.\n  WRITE: / 'Error in calculating the total quantity sold for Product ID: ', lv_productid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display the 'PRODUCTID' and total 'QUANTITY' from the 'ZSALES_ORDER' table for each product.",
        "response": "REPORT zproduct_total_quantity.\n\nTYPES: BEGIN OF ty_sales,\n         productid TYPE zsales_order-productid,\n         quantity  TYPE zsales_order-quantity,\n       END OF ty_sales.\n\nDATA: lt_sales TYPE TABLE OF ty_sales,\n      ls_sales TYPE ty_sales.\n\nSTART-OF-SELECTION.\n\n  SELECT productid, SUM( quantity ) AS quantity FROM zsales_order INTO TABLE lt_sales GROUP BY productid.\n\n  LOOP AT lt_sales INTO ls_sales.\n    WRITE: / 'Product ID: ', ls_sales-productid, 'Total Quantity: ', ls_sales-quantity.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to calculate the factorial of a number using a subroutine.",
        "response": "REPORT zfactorial.\n\nDATA: lv_num TYPE i VALUE 5,\n      lv_fact TYPE i.\n\nPERFORM calculate_factorial USING lv_num CHANGING lv_fact.\n\nWRITE: / 'The factorial of ', lv_num, ' is ', lv_fact.\n\n*Subroutine\nFORM calculate_factorial USING iv_num TYPE i CHANGING cv_fact TYPE i.\n  DATA: lv_i TYPE i VALUE 1.\n\n  DO iv_num TIMES.\n    lv_i = lv_i * sy-index.\n  ENDDO.\n\n  cv_fact = lv_i.\n\nENDFORM."
    },
    {
        "prompt": "Write an ABAP program to delete a record from the 'ZEMPLOYEE' table for a given 'EMPID'.",
        "response": "REPORT zdelete_employee.\n\nDATA: lv_empid TYPE zemployee-empid VALUE 'E001'.\n\nDELETE FROM zemployee WHERE empid = lv_empid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Employee record deleted successfully for Employee ID: ', lv_empid.\nELSE.\n  WRITE: / 'Error in deleting employee record for Employee ID: ', lv_empid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display the total revenue generated from the 'ZSALES_ORDER' table.",
        "response": "REPORT ztotal_revenue.\n\nDATA: lv_total_revenue TYPE zsales_order-revenue,\n      ls_sales_order TYPE zsales_order.\n\nSELECT SUM( revenue ) FROM zsales_order INTO lv_total_revenue.\n\nWRITE: / 'Total revenue generated is ', lv_total_revenue."
    },
    {
        "prompt": "Write an ABAP program to insert a new record into the 'ZEMPLOYEE' table.",
        "response": "REPORT zinsert_employee.\n\nDATA: ls_employee TYPE zemployee.\n\nls_employee-empid = 'E005'.\nls_employee-empname = 'John Doe'.\nls_employee-salary = 5000.\n\nINSERT zemployee FROM ls_employee.\n\nIF sy-subrc = 0.\n  WRITE: / 'New employee record inserted successfully'.\nELSE.\n  WRITE: / 'Error in inserting new employee record'.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display a list of customers from the 'ZCUSTOMER' table where the 'CITY' is 'New York'.",
        "response": "REPORT zcustomer_city.\n\nDATA: lt_customer TYPE TABLE OF zcustomer,\n      ls_customer TYPE zcustomer.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zcustomer INTO TABLE lt_customer WHERE city = 'New York'.\n\n  LOOP AT lt_customer INTO ls_customer.\n    WRITE: / ls_customer-custid, ls_customer-custname, ls_customer-city.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of products from the 'ZPRODUCT' table where the 'QUANTITY' is less than 10.",
        "response": "REPORT zproduct_quantity.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE quantity < 10.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-productname, ls_product-quantity.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of customers from the 'ZCUSTOMER' table where the 'CITY' is either 'Berlin' or 'Munich'.",
        "response": "REPORT zcustomer_city.\n\nDATA: lt_customer TYPE TABLE OF zcustomer,\n      ls_customer TYPE zcustomer.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zcustomer INTO TABLE lt_customer WHERE city IN ('Berlin', 'Munich').\n\n  LOOP AT lt_customer INTO ls_customer.\n    WRITE: / ls_customer-custid, ls_customer-name, ls_customer-city.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of customers from the 'ZCUSTOMER' table who live in 'New York'.",
        "response": "REPORT zcustomer_city.\n\nDATA: lt_customer TYPE TABLE OF zcustomer,\n      ls_customer TYPE zcustomer.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zcustomer INTO TABLE lt_customer WHERE city = 'New York'.\n\n  LOOP AT lt_customer INTO ls_customer.\n    WRITE: / ls_customer-custid, ls_customer-custname, ls_customer-city.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to update the 'QUANTITY' field of a product in the 'ZPRODUCT' table for a given 'PRODUCTID' and reduce the quantity by 1.",
        "response": "REPORT zupdate_product.\n\nDATA: lv_productid TYPE zproduct-productid VALUE 'P001',\n      ls_product TYPE zproduct.\n\nSELECT SINGLE * FROM zproduct INTO ls_product WHERE productid = lv_productid.\n\nIF sy-subrc = 0.\n  IF ls_product-quantity > 0.\n    ls_product-quantity = ls_product-quantity - 1.\n    UPDATE zproduct FROM ls_product.\n    IF sy-subrc = 0.\n      WRITE: / 'Product quantity updated successfully for Product ID: ', lv_productid.\n    ELSE.\n      WRITE: / 'Error in updating product quantity for Product ID: ', lv_productid.\n    ENDIF.\n  ELSE.\n    WRITE: / 'Product quantity is zero for Product ID: ', lv_productid.\n  ENDIF.\nELSE.\n  WRITE: / 'Product not found for Product ID: ', lv_productid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to delete a record from the 'ZCUSTOMER' table where the 'CUSTOMERID' is 'C001'.",
        "response": "REPORT zdelete_customer.\n\nDATA: lv_customerid TYPE zcustomer-customerid VALUE 'C001'.\n\nDELETE FROM zcustomer WHERE customerid = lv_customerid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Customer record deleted successfully for Customer ID: ', lv_customerid.\nELSE.\n  WRITE: / 'Error in deleting customer record for Customer ID: ', lv_customerid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to insert a new employee record into the 'ZEMPLOYEE' table.",
        "response": "REPORT zinsert_employee.\n\nDATA: ls_employee TYPE zemployee.\n\nls_employee-empid = '002'.\nls_employee-name = 'John Doe'.\nls_employee-age = 30.\nls_employee-salary = 5000.\n\nINSERT INTO zemployee VALUES ls_employee.\n\nIF sy-subrc = 0.\n  WRITE: / 'Employee record inserted successfully for Employee ID: ', ls_employee-empid.\nELSE.\n  WRITE: / 'Error in inserting employee record for Employee ID: ', ls_employee-empid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display a list of employees from the 'ZEMPLOYEE' table who joined after a certain date.",
        "response": "REPORT zemployee_join_date.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee,\n      lv_join_date TYPE zemployee-joindate VALUE '20210101'.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE joindate > lv_join_date.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-empname, ls_employee-joindate.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of products from the table 'ZPRODUCT' where the 'STOCK' is less than 10.",
        "response": "REPORT zproduct_stock.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE stock < 10.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-productname, ls_product-stock.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to update the 'SALARY' of an employee in the 'ZEMPLOYEE' table for a given 'EMPID'.",
        "response": "REPORT zupdate_salary.\n\nDATA: lv_empid TYPE zemployee-empid VALUE 'E001',\n      lv_new_salary TYPE zemployee-salary VALUE 6000.\n\nUPDATE zemployee SET salary = lv_new_salary WHERE empid = lv_empid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Salary updated successfully for Employee ID: ', lv_empid.\nELSE.\n  WRITE: / 'Error in updating salary for Employee ID: ', lv_empid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display the list of employees from the 'ZEMPLOYEE' table whose 'AGE' is greater than 50.",
        "response": "REPORT zemployee_age.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE age > 50.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-empname, ls_employee-age.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to calculate the average salary of employees in the 'ZEMPLOYEE' table who belong to the 'IT' department.",
        "response": "REPORT zaverage_salary.\n\nDATA: lv_department TYPE zemployee-department VALUE 'IT',\n      lv_avg_salary TYPE zemployee-salary.\n\nSELECT AVG( salary ) FROM zemployee INTO lv_avg_salary WHERE department = lv_department.\n\nIF sy-subrc = 0.\n  WRITE: / 'The average salary for Department: ', lv_department, ' is ', lv_avg_salary.\nELSE.\n  WRITE: / 'Error in calculating the average salary for Department: ', lv_department.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display a list of customers from the 'ZCUSTOMER' table where the 'COUNTRY' is 'Germany' and 'CITY' is 'Berlin'.",
        "response": "REPORT zcustomer_germany_berlin.\n\nDATA: lt_customer TYPE TABLE OF zcustomer,\n      ls_customer TYPE zcustomer.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zcustomer INTO TABLE lt_customer WHERE country = 'Germany' AND city = 'Berlin'.\n\n  LOOP AT lt_customer INTO ls_customer.\n    WRITE: / ls_customer-custid, ls_customer-name, ls_customer-country, ls_customer-city.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to calculate the average 'SALARY' field from the 'ZEMPLOYEE' table for a given 'DEPARTMENT'.",
        "response": "REPORT zaverage_salary.\n\nDATA: lv_department TYPE zemployee-department VALUE 'HR',\n      lv_average_salary TYPE zemployee-salary,\n      lv_total_salary TYPE zemployee-salary,\n      lv_employee_count TYPE i.\n\nSELECT COUNT( * ) FROM zemployee INTO lv_employee_count WHERE department = lv_department.\nSELECT SUM( salary ) FROM zemployee INTO lv_total_salary WHERE department = lv_department.\n\nIF lv_employee_count > 0.\n  lv_average_salary = lv_total_salary / lv_employee_count.\n  WRITE: / 'The average salary for Department: ', lv_department, ' is ', lv_average_salary.\nELSE.\n  WRITE: / 'No employees found for Department: ', lv_department.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display the list of products from the 'ZPRODUCT' table where the 'CATEGORY' is 'Electronics'.",
        "response": "REPORT zproduct_category.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE category = 'Electronics'.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-productname, ls_product-category.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to calculate the average 'SALARY' field from the 'ZEMPLOYEE' table for employees whose 'AGE' is greater than 30.",
        "response": "REPORT zaverage_salary.\n\nDATA: lv_average_salary TYPE zemployee-salary.\n\nSELECT AVG( salary ) FROM zemployee INTO lv_average_salary WHERE age > 30.\n\nIF sy-subrc = 0.\n  WRITE: / 'The average salary for employees older than 30 is: ', lv_average_salary.\nELSE.\n  WRITE: / 'Error in calculating the average salary for employees older than 30.'.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to delete a record from the 'ZCUSTOMER' table for a given 'CUSTID'.",
        "response": "REPORT zdelete_customer.\n\nDATA: lv_custid TYPE zcustomer-custid VALUE 'C001'.\n\nDELETE FROM zcustomer WHERE custid = lv_custid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Customer record deleted successfully for Customer ID: ', lv_custid.\nELSE.\n  WRITE: / 'Error in deleting customer record for Customer ID: ', lv_custid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display the 'EMPID' and 'NAME' of all employees from the 'ZEMPLOYEE' table whose 'SALARY' is greater than 8000.",
        "response": "REPORT zemployee_salary.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE salary > 8000.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-name.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to delete a product record from the 'ZPRODUCT' table given the 'PRODUCTID'.",
        "response": "REPORT zdelete_product.\n\nDATA: lv_productid TYPE zproduct-productid VALUE 'P001'.\n\nDELETE FROM zproduct WHERE productid = lv_productid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Product record deleted successfully for Product ID: ', lv_productid.\nELSE.\n  WRITE: / 'Error in deleting product record for Product ID: ', lv_productid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display the list of customers from the 'ZCUSTOMER' table whose 'CITY' is 'New York'.",
        "response": "REPORT zcustomer_city.\n\nDATA: lt_customer TYPE TABLE OF zcustomer,\n      ls_customer TYPE zcustomer.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zcustomer INTO TABLE lt_customer WHERE city = 'New York'.\n\n  LOOP AT lt_customer INTO ls_customer.\n    WRITE: / ls_customer-custid, ls_customer-name, ls_customer-city.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the 'EMPID' and 'NAME' of all employees from the 'ZEMPLOYEE' table whose 'DEPARTMENT' is 'Sales' and 'EXPERIENCE' is more than 5 years.",
        "response": "REPORT zemployee_info.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE department = 'Sales' AND experience > 5.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-name.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to update the 'PRICE' of a product in the 'ZPRODUCT' table to 1500 where 'PRODUCTID' is 'P001'.",
        "response": "REPORT zupdate_product_price.\n\nDATA: lv_productid TYPE zproduct-productid VALUE 'P001',\n      lv_new_price TYPE zproduct-price VALUE 1500.\n\nUPDATE zproduct SET price = lv_new_price WHERE productid = lv_productid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Product price updated successfully for Product ID: ', lv_productid.\nELSE.\n  WRITE: / 'Error in updating product price for Product ID: ', lv_productid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to update the 'QUANTITY' field in the 'ZINVENTORY' table by subtracting 5 for a given 'PRODUCTID'.",
        "response": "REPORT zupdate_quantity.\n\nDATA: lv_productid TYPE zinventory-productid VALUE 'P001',\n      ls_inventory TYPE zinventory.\n\nSTART-OF-SELECTION.\n\n  SELECT SINGLE * FROM zinventory INTO ls_inventory WHERE productid = lv_productid.\n\n  IF sy-subrc = 0 AND ls_inventory-quantity >= 5.\n    ls_inventory-quantity = ls_inventory-quantity - 5.\n    UPDATE zinventory FROM ls_inventory.\n    IF sy-subrc = 0.\n      WRITE: / 'Quantity updated successfully for Product ID: ', lv_productid.\n    ELSE.\n      WRITE: / 'Error in updating quantity for Product ID: ', lv_productid.\n    ENDIF.\n  ELSE.\n    WRITE: / 'Insufficient quantity for Product ID: ', lv_productid.\n  ENDIF."
    },
    {
        "prompt": "Write a simple ABAP program that prints \"Hello, World!\" on the screen.",
        "response": "REPORT zhello_world.\n\nSTART-OF-SELECTION.\n\n  WRITE: / 'Hello, World!'."
    },
    {
        "prompt": "Write an ABAP program to display a list of employees from the table 'ZEMPLOYEE' where the 'JOINING_DATE' is in the last year.",
        "response": "REPORT zemployee_last_year.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee,\n      lv_last_year TYPE sy-datum.\n\nlv_last_year = sy-datum - 365.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE joining_date BETWEEN lv_last_year AND sy-datum.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-name, ls_employee-joining_date.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to update the 'SALARY' of an employee in the 'ZEMPLOYEE' table for a given 'EMPID'.",
        "response": "REPORT zupdate_employee.\n\nDATA: lv_empid TYPE zemployee-empid VALUE 'E001',\n      lv_salary TYPE zemployee-salary VALUE 6000.\n\nUPDATE zemployee SET salary = lv_salary WHERE empid = lv_empid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Employee salary updated successfully for Employee ID: ', lv_empid.\nELSE.\n  WRITE: / 'Error in updating employee salary for Employee ID: ', lv_empid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display a list of customers from the 'ZCUSTOMER' table who live in 'London'.",
        "response": "REPORT zcustomer_city.\n\nDATA: lt_customer TYPE TABLE OF zcustomer,\n      ls_customer TYPE zcustomer.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zcustomer INTO TABLE lt_customer WHERE city = 'London'.\n\n  LOOP AT lt_customer INTO ls_customer.\n    WRITE: / ls_customer-custid, ls_customer-name, ls_customer-city.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the list of products from the 'ZPRODUCT' table whose 'CATEGORY' is 'Electronics'.",
        "response": "REPORT zproduct_category.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE category = 'Electronics'.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-productname, ls_product-category.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to update the 'PRICE' of a product in the 'ZPRODUCT' table given the 'PRODUCTID'.",
        "response": "REPORT zupdate_product.\n\nDATA: lv_productid TYPE zproduct-productid VALUE 'P001',\n      lv_new_price TYPE zproduct-price VALUE '2000'.\n\nUPDATE zproduct SET price = lv_new_price WHERE productid = lv_productid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Product price updated successfully for Product ID: ', lv_productid.\nELSE.\n  WRITE: / 'Error in updating product price for Product ID: ', lv_productid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to delete a record from the 'ZPRODUCT' table given the 'PRODUCTID'.",
        "response": "REPORT zdelete_product.\n\nDATA: lv_productid TYPE zproduct-productid VALUE 'P001'.\n\nDELETE FROM zproduct WHERE productid = lv_productid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Product deleted successfully with Product ID: ', lv_productid.\nELSE.\n  WRITE: / 'Error in deleting the product with Product ID: ', lv_productid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to update the 'PRICE' of a product in the 'ZPRODUCT' table given the 'PRODUCTID'.",
        "response": "REPORT zupdate_product_price.\n\nDATA: lv_productid TYPE zproduct-productid VALUE 'P001',\n      lv_price     TYPE zproduct-price VALUE 100.\n\nUPDATE zproduct SET price = lv_price WHERE productid = lv_productid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Product price updated successfully for Product ID: ', lv_productid.\nELSE.\n  WRITE: / 'Error in updating product price for Product ID: ', lv_productid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display the list of employees from the 'ZEMPLOYEE' table whose 'SALARY' is less than 3000.",
        "response": "REPORT zemployee_salary.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE salary < 3000.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-name, ls_employee-salary.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to update the 'PRICE' of a product in the 'ZPRODUCT' table by increasing it by 10%, given the 'PRODUCTID'.",
        "response": "REPORT zupdate_product_price.\n\nDATA: lv_productid TYPE zproduct-productid VALUE 'P001',\n      lv_price     TYPE zproduct-price.\n\nSELECT SINGLE price FROM zproduct INTO lv_price WHERE productid = lv_productid.\n\nIF sy-subrc = 0.\n  lv_price = lv_price + ( lv_price * 0.1 ).\n  UPDATE zproduct SET price = lv_price WHERE productid = lv_productid.\n  IF sy-subrc = 0.\n    WRITE: / 'Product price updated successfully for Product ID: ', lv_productid.\n  ELSE.\n    WRITE: / 'Error in updating product price for Product ID: ', lv_productid.\n  ENDIF.\nELSE.\n  WRITE: / 'Product not found for Product ID: ', lv_productid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display the list of products from the 'ZPRODUCT' table where the 'PRICE' is less than 1000.",
        "response": "REPORT zproduct_price.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE price < 1000.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-productname, ls_product-price.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to calculate the sum of 'QUANTITY' field from the 'ZSALES_ORDER' table for a given 'CUSTOMERID'.",
        "response": "REPORT zsum_quantity.\n\nDATA: lv_customerid TYPE zsales_order-customerid VALUE 'C001',\n      lv_sum_quantity TYPE zsales_order-quantity.\n\nSELECT SUM( quantity ) FROM zsales_order INTO lv_sum_quantity WHERE customerid = lv_customerid.\n\nIF sy-subrc = 0.\n  WRITE: / 'The total quantity for Customer ID: ', lv_customerid, ' is ', lv_sum_quantity.\nELSE.\n  WRITE: / 'Error in calculating the total quantity for Customer ID: ', lv_customerid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display the 'PRODUCTID' and 'PRODUCTNAME' from the 'ZPRODUCT' table for products that are out of stock.",
        "response": "REPORT zproduct_stock.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE stock = 0.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / 'Product ID: ', ls_product-productid, ' Product Name: ', ls_product-productname.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to update the 'SALARY' field of an employee in the 'ZEMPLOYEE' table for a given 'EMPID'.",
        "response": "REPORT zupdate_employee_salary.\n\nDATA: lv_empid TYPE zemployee-empid VALUE 'E001',\n      lv_new_salary TYPE zemployee-salary VALUE 12000.\n\nUPDATE zemployee SET salary = lv_new_salary WHERE empid = lv_empid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Salary updated successfully for Employee ID: ', lv_empid.\nELSE.\n  WRITE: / 'Error in updating salary for Employee ID: ', lv_empid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to update the 'SALARY' of an employee in the 'ZEMPLOYEE' table for a given 'EMPID'.",
        "response": "REPORT zupdate_salary.\n\nDATA: lv_empid TYPE zemployee-empid VALUE 'E001',\n      lv_salary TYPE zemployee-salary VALUE 5000.\n\nUPDATE zemployee SET salary = lv_salary WHERE empid = lv_empid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Salary updated successfully for Employee ID: ', lv_empid.\nELSE.\n  WRITE: / 'Error in updating salary for Employee ID: ', lv_empid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to delete a product record from the 'ZPRODUCT' table for a given 'PRODUCTID'.",
        "response": "REPORT zdelete_product.\n\nDATA: lv_productid TYPE zproduct-productid VALUE 'P001'.\n\nDELETE FROM zproduct WHERE productid = lv_productid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Product record deleted successfully for Product ID: ', lv_productid.\nELSE.\n  WRITE: / 'Error in deleting product record for Product ID: ', lv_productid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program that reads data from the 'ZCUSTOMER' table and displays it in an ALV grid.",
        "response": "REPORT zdisplay_alv.\n\nTYPES: BEGIN OF ty_customer,\n         custid TYPE zcustomer-custid,\n         name   TYPE zcustomer-name,\n         city   TYPE zcustomer-city,\n       END OF ty_customer.\n\nDATA: lt_customer TYPE TABLE OF ty_customer,\n      ls_customer TYPE ty_customer,\n      lo_alv      TYPE REF TO cl_salv_table.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zcustomer INTO TABLE lt_customer.\n\n  cl_salv_table=>factory( IMPORTING r_salv_table = lo_alv\n                          CHANGING  t_table      = lt_customer ).\n\n  lo_alv->display( )."
    },
    {
        "prompt": "Write an ABAP program to calculate the total 'SALARY' of employees from the 'ZEMPLOYEE' table.",
        "response": "REPORT ztotal_salary.\n\nDATA: lv_total_salary TYPE zemployee-salary.\n\nSELECT SUM( salary ) FROM zemployee INTO lv_total_salary.\n\nWRITE: / 'The total salary of all employees is ', lv_total_salary."
    },
    {
        "prompt": "Write an ABAP program to update the 'SALARY' of an employee in the 'ZEMPLOYEE' table given the 'EMPID'.",
        "response": "REPORT zupdate_salary.\n\nDATA: lv_empid TYPE zemployee-empid VALUE '001',\n      lv_salary TYPE zemployee-salary VALUE 5000.\n\nUPDATE zemployee SET salary = lv_salary WHERE empid = lv_empid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Salary updated successfully for Employee ID: ', lv_empid.\nELSE.\n  WRITE: / 'Error in updating salary for Employee ID: ', lv_empid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to update the 'PRICE' field of a product in the 'ZPRODUCT' table for a given 'PRODUCTID'.",
        "response": "REPORT zupdate_product.\n\nDATA: lv_productid TYPE zproduct-productid VALUE 'P001',\n      lv_price TYPE zproduct-price VALUE '100'.\n\nUPDATE zproduct SET price = lv_price WHERE productid = lv_productid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Product price updated successfully for Product ID: ', lv_productid.\nELSE.\n  WRITE: / 'Error in updating product price for Product ID: ', lv_productid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to update the 'SALARY' field of the 'ZEMPLOYEE' table by 10% for all employees in the 'HR' department.",
        "response": "REPORT zupdate_salary.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee.\n\nSELECT * FROM zemployee INTO TABLE lt_employee WHERE deptid = 'HR'.\n\nLOOP AT lt_employee INTO ls_employee.\n  ls_employee-salary = ls_employee-salary * 1.1.\n  MODIFY zemployee FROM ls_employee.\nENDLOOP.\n\nIF sy-subrc = 0.\n  WRITE: / 'Salary updated successfully for all employees in HR department'.\nELSE.\n  WRITE: / 'Error in updating salary for employees in HR department'.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display the 'CUSTOMERID' and 'NAME' of all customers from the 'ZCUSTOMER' table whose 'CITY' is 'New York'.",
        "response": "REPORT zcustomer_city.\n\nDATA: lt_customer TYPE TABLE OF zcustomer,\n      ls_customer TYPE zcustomer.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zcustomer INTO TABLE lt_customer WHERE city = 'New York'.\n\n  LOOP AT lt_customer INTO ls_customer.\n    WRITE: / ls_customer-customerid, ls_customer-name.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the 'EMPLOYEE_NAME' and 'SALARY' from the 'ZEMPLOYEE' table for employees who have a 'SALARY' greater than 5000.",
        "response": "REPORT zemployee_salary.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE salary > 5000.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / 'Employee Name: ', ls_employee-name, ' Salary: ', ls_employee-salary.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of products from the 'ZPRODUCT' table whose price is between 100 and 500.",
        "response": "REPORT zproduct_price_range.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE price BETWEEN 100 AND 500.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-productname, ls_product-price.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of customers from the 'ZCUSTOMER' table who live in the city 'New York'.",
        "response": "REPORT zcustomer_city.\n\nDATA: lt_customer TYPE TABLE OF zcustomer,\n      ls_customer TYPE zcustomer.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zcustomer INTO TABLE lt_customer WHERE city = 'New York'.\n\n  LOOP AT lt_customer INTO ls_customer.\n    WRITE: / ls_customer-custid, ls_customer-name, ls_customer-city.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to update the 'SALARY' of an employee in the 'ZEMPLOYEE' table given the 'EMPID'.",
        "response": "REPORT zupdate_salary.\n\nDATA: lv_empid TYPE zemployee-empid VALUE 'E001',\n      lv_new_salary TYPE zemployee-salary VALUE 8000.\n\nUPDATE zemployee SET salary = lv_new_salary WHERE empid = lv_empid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Salary updated successfully for Employee ID: ', lv_empid.\nELSE.\n  WRITE: / 'Error in updating salary for Employee ID: ', lv_empid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display a list of employees from the 'ZEMPLOYEE' table who have a 'SALARY' greater than 10000.",
        "response": "REPORT zemployee_salary.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE salary > 10000.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-empname, ls_employee-salary.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of products from the 'ZPRODUCT' table whose 'STOCK' is less than 10.",
        "response": "REPORT zproduct_stock.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE stock < 10.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-productname, ls_product-stock.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of products from the 'ZPRODUCT' table where the 'PRODUCTNAME' starts with 'A'.",
        "response": "REPORT zproduct_name_start.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE productname LIKE 'A%'.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-productname, ls_product-price.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to delete a record from the 'ZCUSTOMER' table for a given 'CUSTOMERID'.",
        "response": "REPORT zdelete_customer.\n\nDATA: lv_customerid TYPE zcustomer-customerid VALUE 'C001'.\n\nDELETE FROM zcustomer WHERE customerid = lv_customerid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Customer record deleted successfully for Customer ID: ', lv_customerid.\nELSE.\n  WRITE: / 'Error in deleting customer record for Customer ID: ', lv_customerid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display the list of employees from the 'ZEMPLOYEE' table who are from 'Berlin'.",
        "response": "REPORT zemployee_city.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee,\n      lv_city TYPE zemployee-city VALUE 'Berlin'.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE city = lv_city.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-name, ls_employee-city.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to update the 'PRICE' of a product in the 'ZPRODUCT' table for a given 'PRODUCTID'.",
        "response": "REPORT zupdate_price.\n\nDATA: lv_productid TYPE zproduct-productid VALUE 'P001',\n      lv_price TYPE zproduct-price VALUE 1500.\n\nUPDATE zproduct SET price = lv_price WHERE productid = lv_productid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Price updated successfully for Product ID: ', lv_productid.\nELSE.\n  WRITE: / 'Error in updating price for Product ID: ', lv_productid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display a list of products from the table 'ZPRODUCT' where the 'PRICE' is greater than 1000.",
        "response": "REPORT zproduct_price.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE price > 1000.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-productname, ls_product-price.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of employees from the 'ZEMPLOYEE' table who have 'MANAGER' as their 'POSITION' and have been with the company for more than 5 years.",
        "response": "REPORT zemployee_position.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee,\n      lv_position TYPE zemployee-position VALUE 'MANAGER',\n      lv_years TYPE i VALUE 5,\n      lv_date TYPE sy-datum.\n\nlv_date = sy-datum - ( lv_years * 365 ).\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE position = lv_position AND join_date <= lv_date.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-name, ls_employee-position, ls_employee-join_date.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to delete a record from the 'ZCUSTOMER' table given the 'CUSTOMERID'.",
        "response": "REPORT zdelete_customer.\n\nDATA: lv_customerid TYPE zcustomer-customerid VALUE 'C001'.\n\nDELETE FROM zcustomer WHERE customerid = lv_customerid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Customer record deleted successfully for Customer ID: ', lv_customerid.\nELSE.\n  WRITE: / 'Error in deleting customer record for Customer ID: ', lv_customerid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display a list of orders from the 'ZORDER' table where the 'ORDERSTATUS' is 'Open'.",
        "response": "REPORT zorder_status.\n\nDATA: lt_order TYPE TABLE OF zorder,\n      ls_order TYPE zorder.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zorder INTO TABLE lt_order WHERE orderstatus = 'Open'.\n\n  LOOP AT lt_order INTO ls_order.\n    WRITE: / ls_order-orderid, ls_order-customerid, ls_order-orderstatus.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to update the 'SALARY' field of an employee in the 'ZEMPLOYEE' table whose 'EMPID' is '002'.",
        "response": "REPORT zupdate_employee.\n\nDATA: lv_new_salary TYPE zemployee-salary VALUE 8000,\n      lv_empid TYPE zemployee-empid VALUE '002'.\n\nUPDATE zemployee SET salary = lv_new_salary WHERE empid = lv_empid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Salary updated successfully for Employee ID: ', lv_empid.\nELSE.\n  WRITE: / 'Error in updating salary for Employee ID: ', lv_empid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display the list of products from the 'ZPRODUCT' table whose 'STOCK' is less than 5.",
        "response": "REPORT zproduct_stock.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE stock < 5.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-productname, ls_product-stock.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to calculate the total sales amount from the 'ZSALES_ORDER' table.",
        "response": "REPORT ztotal_sales.\n\nDATA: lt_sales_order TYPE TABLE OF zsales_order,\n      ls_sales_order TYPE zsales_order,\n      lv_total_sales TYPE zsales_order-sales_amount.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zsales_order INTO TABLE lt_sales_order.\n\n  LOOP AT lt_sales_order INTO ls_sales_order.\n    ADD ls_sales_order-sales_amount TO lv_total_sales.\n  ENDLOOP.\n\n  WRITE: / 'The total sales amount is ', lv_total_sales."
    },
    {
        "prompt": "Write an ABAP program that will display a list of products from the 'ZPRODUCT' table where the 'CATEGORY' is 'Electronics'.",
        "response": "REPORT zproduct_category.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE category = 'Electronics'.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-name, ls_product-category.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to delete a record from the 'ZCUSTOMER' table given the 'CUSTID'.",
        "response": "REPORT zdelete_customer.\n\nDATA: lv_custid TYPE zcustomer-custid VALUE 'C002'.\n\nDELETE FROM zcustomer WHERE custid = lv_custid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Customer record deleted successfully for Customer ID: ', lv_custid.\nELSE.\n  WRITE: / 'Error in deleting customer record for Customer ID: ', lv_custid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to update the 'SALARY' of an employee in the 'ZEMPLOYEE' table for a given 'EMPID'.",
        "response": "REPORT zupdate_employee.\n\nDATA: lv_empid TYPE zemployee-empid VALUE '001',\n      lv_salary TYPE zemployee-salary VALUE 6000.\n\nUPDATE zemployee SET salary = lv_salary WHERE empid = lv_empid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Salary updated successfully for Employee ID: ', lv_empid.\nELSE.\n  WRITE: / 'Error in updating salary for Employee ID: ', lv_empid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display the list of products from the 'ZPRODUCT' table whose 'PRICE' is greater than 500.",
        "response": "REPORT zproduct_price.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE price > 500.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-name, ls_product-price.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to update the 'SALARY' field of the 'ZEMPLOYEE' table by 10% for all employees who have been with the company for more than 5 years.",
        "response": "REPORT zupdate_salary.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE years_of_service > 5.\n\n  LOOP AT lt_employee INTO ls_employee.\n    ls_employee-salary = ls_employee-salary * 1.1.\n    MODIFY zemployee FROM ls_employee.\n    IF sy-subrc = 0.\n      WRITE: / 'Salary updated successfully for Employee ID: ', ls_employee-empid.\n    ELSE.\n      WRITE: / 'Error in updating salary for Employee ID: ', ls_employee-empid.\n    ENDIF.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to update the 'STATUS' of a sales order in the 'ZSALES_ORDER' table for a given 'ORDERID' to 'Completed'.",
        "response": "REPORT zupdate_sales_order.\n\nDATA: lv_orderid TYPE zsales_order-orderid VALUE 'SO001',\n      lv_status  TYPE zsales_order-status   VALUE 'Completed'.\n\nUPDATE zsales_order SET status = lv_status WHERE orderid = lv_orderid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Sales order status updated successfully for Order ID: ', lv_orderid.\nELSE.\n  WRITE: / 'Error in updating sales order status for Order ID: ', lv_orderid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to calculate the total sales from the 'ZSALES_ORDER' table for a given 'PRODUCTID'.",
        "response": "REPORT ztotal_sales.\n\nDATA: lv_productid TYPE zsales_order-productid VALUE 'P001',\n      lv_total_sales TYPE zsales_order-sales.\n\nSELECT SUM( sales ) FROM zsales_order INTO lv_total_sales WHERE productid = lv_productid.\n\nIF sy-subrc = 0.\n  WRITE: / 'The total sales for Product ID: ', lv_productid, ' is ', lv_total_sales.\nELSE.\n  WRITE: / 'Error in calculating the total sales for Product ID: ', lv_productid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to update the 'SALARY' of an employee in the 'ZEMPLOYEE' table given the 'EMPID'.",
        "response": "REPORT zupdate_employee.\n\nDATA: lv_empid TYPE zemployee-empid VALUE '001',\n      lv_salary TYPE zemployee-salary VALUE 5000.\n\nUPDATE zemployee SET salary = lv_salary WHERE empid = lv_empid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Employee salary updated successfully for Employee ID: ', lv_empid.\nELSE.\n  WRITE: / 'Error in updating employee salary for Employee ID: ', lv_empid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display the 'PRODUCT_NAME' and 'PRICE' from the 'ZPRODUCT' table for products that have a 'PRICE' less than 100.",
        "response": "REPORT zproduct_price.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE price < 100.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / 'Product Name: ', ls_product-productname, ' Price: ', ls_product-price.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of employees from the 'ZEMPLOYEE' table where the 'SALARY' is between 5000 and 10000.",
        "response": "REPORT zemployee_salary.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE salary BETWEEN 5000 AND 10000.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-name, ls_employee-salary.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to update the 'PRICE' of a product in the 'ZPRODUCT' table given the 'PRODUCTID'.",
        "response": "REPORT zupdate_price.\n\nDATA: lv_productid TYPE zproduct-productid VALUE 'P001',\n      lv_new_price TYPE zproduct-price VALUE 1500.\n\nUPDATE zproduct SET price = lv_new_price WHERE productid = lv_productid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Price updated successfully for Product ID: ', lv_productid.\nELSE.\n  WRITE: / 'Error in updating price for Product ID: ', lv_productid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to calculate the total quantity of a specific product sold, using the 'ZSALES_ORDER' table.",
        "response": "REPORT ztotal_quantity.\n\nDATA: lv_productid TYPE zsales_order-productid VALUE '001',\n      lv_total_qty TYPE zsales_order-quantity,\n      ls_sales_order TYPE zsales_order.\n\nSELECT SUM( quantity ) FROM zsales_order INTO lv_total_qty WHERE productid = lv_productid.\n\nWRITE: / 'Total quantity sold for Product ID ', lv_productid, ' is ', lv_total_qty."
    },
    {
        "prompt": "Write an ABAP program to display the total 'QUANTITY' of each 'PRODUCTID' from the 'ZSALES_ORDER' table.",
        "response": "REPORT ztotal_quantity_per_product.\n\nTYPES: BEGIN OF ty_sales,\n         productid TYPE zsales_order-productid,\n         total_quantity TYPE zsales_order-quantity,\n       END OF ty_sales.\n\nDATA: lt_sales TYPE TABLE OF ty_sales,\n      ls_sales TYPE ty_sales.\n\nSTART-OF-SELECTION.\n\n  SELECT productid, SUM( quantity ) AS total_quantity FROM zsales_order\n    INTO TABLE lt_sales\n    GROUP BY productid.\n\n  LOOP AT lt_sales INTO ls_sales.\n    WRITE: / 'Product ID: ', ls_sales-productid, 'Total Quantity: ', ls_sales-total_quantity.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of products from the table 'ZPRODUCT' where the 'CATEGORY' is 'Electronics'.",
        "response": "REPORT zproduct_category.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE category = 'Electronics'.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-productname, ls_product-category.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to update the 'SALARY' of an employee in the 'ZEMPLOYEE' table by increasing it by 10%, given the 'EMPID'.",
        "response": "REPORT zupdate_employee_salary.\n\nDATA: lv_empid  TYPE zemployee-empid VALUE 'E001',\n      lv_salary TYPE zemployee-salary.\n\nSELECT SINGLE salary FROM zemployee INTO lv_salary WHERE empid = lv_empid.\n\nIF sy-subrc = 0.\n  lv_salary = lv_salary * 1.1.\n  UPDATE zemployee SET salary = lv_salary WHERE empid = lv_empid.\n  IF sy-subrc = 0.\n    WRITE: / 'Employee salary updated successfully for Employee ID: ', lv_empid.\n  ELSE.\n    WRITE: / 'Error in updating employee salary for Employee ID: ', lv_empid.\n  ENDIF.\nELSE.\n  WRITE: / 'Employee not found for Employee ID: ', lv_empid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to update the 'SALARY' field of an employee in the 'ZEMPLOYEE' table given the 'EMPID'.",
        "response": "REPORT zupdate_salary.\n\nDATA: lv_empid TYPE zemployee-empid VALUE '001',\n      lv_salary TYPE zemployee-salary VALUE 5000.\n\nUPDATE zemployee SET salary = lv_salary WHERE empid = lv_empid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Salary updated successfully for Employee ID: ', lv_empid.\nELSE.\n  WRITE: / 'Error in updating salary for Employee ID: ', lv_empid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display the total sales for each product from the 'ZSALES_ORDER' table.",
        "response": "REPORT ztotal_sales_per_product.\n\nTYPES: BEGIN OF ty_sales,\n         productid TYPE zsales_order-productid,\n         total_sales TYPE P DECIMALS 2,\n       END OF ty_sales.\n\nDATA: lt_sales TYPE TABLE OF ty_sales,\n      ls_sales TYPE ty_sales.\n\nSTART-OF-SELECTION.\n\n  SELECT productid, SUM( sales ) AS total_sales FROM zsales_order\n    INTO TABLE lt_sales\n    GROUP BY productid.\n\n  LOOP AT lt_sales INTO ls_sales.\n    WRITE: / 'Product ID: ', ls_sales-productid, 'Total Sales: ', ls_sales-total_sales.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to calculate the total 'QUANTITY' field from the 'ZSALES_ORDER' table for a given 'CUSTOMERID'.",
        "response": "REPORT ztotal_quantity.\n\nDATA: lv_customerid TYPE zsales_order-customerid VALUE 'C001',\n      lv_total_quantity TYPE zsales_order-quantity.\n\nSELECT SUM( quantity ) FROM zsales_order INTO lv_total_quantity WHERE customerid = lv_customerid.\n\nIF sy-subrc = 0.\n  WRITE: / 'The total quantity for Customer ID: ', lv_customerid, ' is ', lv_total_quantity.\nELSE.\n  WRITE: / 'Error in calculating the total quantity for Customer ID: ', lv_customerid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to insert a new record into the 'ZEMPLOYEE' table.",
        "response": "REPORT zinsert_employee.\n\nDATA: ls_employee TYPE zemployee.\n\nls_employee-empid = 'E001'.\nls_employee-name = 'John Doe'.\nls_employee-department = 'IT'.\nls_employee-salary = 5000.\n\nINSERT zemployee FROM ls_employee.\n\nIF sy-subrc = 0.\n  WRITE: / 'Employee record inserted successfully for Employee ID: ', ls_employee-empid.\nELSE.\n  WRITE: / 'Error in inserting employee record for Employee ID: ', ls_employee-empid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display a list of employees from the table 'ZEMPLOYEE' where the 'AGE' is greater than 30.",
        "response": "REPORT zemployee_age.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE age > 30.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-name, ls_employee-age.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the list of customers from the 'ZCUSTOMER' table who live in the 'CITY' 'New York' and whose 'CREDIT_LIMIT' is above 10000.",
        "response": "REPORT zcustomer_credit_limit.\n\nDATA: lt_customer TYPE TABLE OF zcustomer,\n      ls_customer TYPE zcustomer.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zcustomer INTO TABLE lt_customer WHERE city = 'New York' AND credit_limit > 10000.\n\n  LOOP AT lt_customer INTO ls_customer.\n    WRITE: / ls_customer-custid, ls_customer-name, ls_customer-city, ls_customer-credit_limit.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of products from the 'ZPRODUCT' table where the 'CATEGORY' is 'Electronics' and 'PRICE' is less than 1000.",
        "response": "REPORT zproduct_category_price.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE category = 'Electronics' AND price < 1000.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-productname, ls_product-category, ls_product-price.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of employees from the 'ZEMPLOYEE' table who joined after '01.01.2020'.",
        "response": "REPORT zemployee_join_date.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee,\n      lv_date TYPE sy-datum VALUE '20200101'.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE join_date > lv_date.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-name, ls_employee-join_date.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of employees from the 'ZEMPLOYEE' table who are from 'Berlin' and whose 'SALARY' is greater than 50000.",
        "response": "REPORT zemployee_city_salary.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee,\n      lv_city TYPE zemployee-city VALUE 'Berlin'.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE city = lv_city AND salary > 50000.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-name, ls_employee-city, ls_employee-salary.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to update the 'SALARY' field of an employee in the 'ZEMPLOYEE' table for a given 'EMPID'.",
        "response": "REPORT zupdate_employee.\n\nDATA: lv_empid TYPE zemployee-empid VALUE '001',\n      lv_salary TYPE zemployee-salary VALUE '6000'.\n\nUPDATE zemployee SET salary = lv_salary WHERE empid = lv_empid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Employee salary updated successfully for Employee ID: ', lv_empid.\nELSE.\n  WRITE: / 'Error in updating employee salary for Employee ID: ', lv_empid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display a list of employees from the 'ZEMPLOYEE' table whose 'SALARY' is above 5000.",
        "response": "REPORT zemployee_salary.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE salary > 5000.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-name, ls_employee-salary.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to update the 'CITY' of a customer in the 'ZCUSTOMER' table given the 'CUSTID'.",
        "response": "REPORT zupdate_customer.\n\nDATA: lv_custid TYPE zcustomer-custid VALUE '001',\n      lv_city   TYPE zcustomer-city VALUE 'San Francisco'.\n\nUPDATE zcustomer SET city = lv_city WHERE custid = lv_custid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Customer record updated successfully for Customer ID: ', lv_custid.\nELSE.\n  WRITE: / 'Error in updating customer record for Customer ID: ', lv_custid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display the total sales for each customer from the 'ZSALES_ORDER' table.",
        "response": "REPORT ztotal_sales_per_customer.\n\nTYPES: BEGIN OF ty_sales,\n         customerid TYPE zsales_order-customerid,\n         total_sales TYPE P DECIMALS 2,\n       END OF ty_sales.\n\nDATA: lt_sales TYPE TABLE OF ty_sales,\n      ls_sales TYPE ty_sales.\n\nSTART-OF-SELECTION.\n\n  SELECT customerid, SUM( sales ) AS total_sales FROM zsales_order\n    INTO TABLE lt_sales\n    GROUP BY customerid.\n\n  LOOP AT lt_sales INTO ls_sales.\n    WRITE: / 'Customer ID: ', ls_sales-customerid, 'Total Sales: ', ls_sales-total_sales.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to delete an employee record from the 'ZEMPLOYEE' table given the 'EMPID'.",
        "response": "REPORT zdelete_employee.\n\nDATA: lv_empid TYPE zemployee-empid VALUE '001'.\n\nDELETE FROM zemployee WHERE empid = lv_empid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Employee record deleted successfully for Employee ID: ', lv_empid.\nELSE.\n  WRITE: / 'Error in deleting employee record for Employee ID: ', lv_empid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display a list of customers from the 'ZCUSTOMER' table who are located in 'USA' and have made purchases above 5000 in the 'ZSALES_ORDER' table.",
        "response": "REPORT zcustomer_sales.\n\nTYPES: BEGIN OF ty_customer_sales,\n         custid TYPE zcustomer-custid,\n         name   TYPE zcustomer-name,\n         country TYPE zcustomer-country,\n         total_sales TYPE zsales_order-sales_amount,\n       END OF ty_customer_sales.\n\nDATA: lt_customer_sales TYPE TABLE OF ty_customer_sales,\n      ls_customer_sales TYPE ty_customer_sales,\n      lv_sales_amount TYPE zsales_order-sales_amount VALUE 5000.\n\nSTART-OF-SELECTION.\n\n  SELECT c~custid, c~name, c~country, SUM( s~sales_amount ) AS total_sales\n    FROM zcustomer AS c\n    JOIN zsales_order AS s ON s~custid = c~custid\n    WHERE c~country = 'USA'\n    GROUP BY c~custid, c~name, c~country\n    HAVING total_sales > lv_sales_amount\n    INTO TABLE lt_customer_sales.\n\n  LOOP AT lt_customer_sales INTO ls_customer_sales.\n    WRITE: / ls_customer_sales-custid, ls_customer_sales-name, ls_customer_sales-country, ls_customer_sales-total_sales.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of products from the 'ZPRODUCT' table where the 'PRICE' is between 100 and 500.",
        "response": "REPORT zproduct_price_range.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE price BETWEEN 100 AND 500.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-productname, ls_product-price.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to delete a customer record from the 'ZCUSTOMER' table given the 'CUSTID'.",
        "response": "REPORT zdelete_customer.\n\nDATA: lv_custid TYPE zcustomer-custid VALUE 'C001'.\n\nDELETE FROM zcustomer WHERE custid = lv_custid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Customer record deleted successfully for Customer ID: ', lv_custid.\nELSE.\n  WRITE: / 'Error in deleting customer record for Customer ID: ', lv_custid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display a list of products from the 'ZPRODUCT' table where the 'CATEGORY' is 'Electronics'.",
        "response": "REPORT zproduct_category.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE category = 'Electronics'.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-productname, ls_product-category.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of customers from the 'ZCUSTOMER' table who are from 'London' and whose 'CREDITLIMIT' is greater than 10000.",
        "response": "REPORT zcustomer_city_credit.\n\nDATA: lt_customer TYPE TABLE OF zcustomer,\n      ls_customer TYPE zcustomer,\n      lv_city TYPE zcustomer-city VALUE 'London'.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zcustomer INTO TABLE lt_customer WHERE city = lv_city AND creditlimit > 10000.\n\n  LOOP AT lt_customer INTO ls_customer.\n    WRITE: / ls_customer-custid, ls_customer-name, ls_customer-city, ls_customer-creditlimit.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to insert a new employee record into the 'ZEMPLOYEE' table.",
        "response": "REPORT zinsert_employee.\n\nDATA: ls_employee TYPE zemployee.\n\nls_employee-empid = 'E001'.\nls_employee-name = 'John Doe'.\nls_employee-deptid = 'D001'.\nls_employee-salary = 5000.\n\nINSERT zemployee FROM ls_employee.\n\nIF sy-subrc = 0.\n  WRITE: / 'Employee record inserted successfully for Employee ID: ', ls_employee-empid.\nELSE.\n  WRITE: / 'Error in inserting employee record for Employee ID: ', ls_employee-empid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display a list of products from the 'ZPRODUCT' table where the 'PRICE' is less than 500.",
        "response": "REPORT zproduct_price.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE price < 500.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-productname, ls_product-price.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the number of employees in each department from the 'ZEMPLOYEE' table.",
        "response": "REPORT zemployee_dept_count.\n\nTYPES: BEGIN OF ty_dept_count,\n         deptid TYPE zemployee-deptid,\n         count  TYPE i,\n       END OF ty_dept_count.\n\nDATA: lt_dept_count TYPE TABLE OF ty_dept_count,\n      ls_dept_count TYPE ty_dept_count.\n\nSTART-OF-SELECTION.\n\n  SELECT deptid, COUNT( * ) AS count FROM zemployee GROUP BY deptid INTO TABLE lt_dept_count.\n\n  LOOP AT lt_dept_count INTO ls_dept_count.\n    WRITE: / 'Department ID: ', ls_dept_count-deptid, 'Count: ', ls_dept_count-count.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the details of the least expensive product from the 'ZPRODUCT' table.",
        "response": "REPORT zleast_expensive_product.\n\nTYPES: BEGIN OF ty_product,\n         productid   TYPE zproduct-productid,\n         productname TYPE zproduct-productname,\n         price       TYPE zproduct-price,\n       END OF ty_product.\n\nDATA: lt_product TYPE TABLE OF ty_product,\n      ls_product TYPE ty_product,\n      lv_min_price TYPE zproduct-price.\n\nSTART-OF-SELECTION.\n\n  SELECT productid productname price FROM zproduct INTO TABLE lt_product ORDER BY price ASCENDING.\n\n  READ TABLE lt_product INTO ls_product INDEX 1.\n\n  IF sy-subrc = 0.\n    WRITE: / 'Least Expensive Product ID: ', ls_product-productid, 'Name: ', ls_product-productname, 'Price: ', ls_product-price.\n  ELSE.\n    WRITE: / 'No products found in ZPRODUCT table'.\n  ENDIF."
    },
    {
        "prompt": "Write an ABAP program that reads data from the 'ZSALES_ORDER' table and displays it in an ALV grid, sorted by 'ORDER_DATE' in descending order.",
        "response": "REPORT zdisplay_sales_order.\n\nTYPES: BEGIN OF ty_sales_order,\n         orderid     TYPE zsales_order-orderid,\n         customerid  TYPE zsales_order-customerid,\n         productid   TYPE zsales_order-productid,\n         order_date  TYPE zsales_order-order_date,\n       END OF ty_sales_order.\n\nDATA: lt_sales_order TYPE TABLE OF ty_sales_order,\n      ls_sales_order TYPE ty_sales_order,\n      lo_alv         TYPE REF TO cl_salv_table.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zsales_order INTO TABLE lt_sales_order ORDER BY order_date DESCENDING.\n\n  cl_salv_table=>factory( IMPORTING r_salv_table = lo_alv\n                          CHANGING  t_table      = lt_sales_order ).\n\n  lo_alv->display( )."
    },
    {
        "prompt": "Write an ABAP program to display a list of employees from the table 'ZEMPLOYEE' where the 'SALARY' is between 5000 and 10000.",
        "response": "REPORT zemployee_salary.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE salary BETWEEN 5000 AND 10000.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-name, ls_employee-salary.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the list of products from the 'ZPRODUCT' table whose 'PRICE' is between 100 and 500.",
        "response": "REPORT zproduct_price.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE price BETWEEN 100 AND 500.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-prodid, ls_product-name, ls_product-price.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the 'PRODUCTID' and 'PRODUCTNAME' of all products from the 'ZPRODUCT' table whose 'CATEGORY' is 'Electronics' and 'PRICE' is less than 500.",
        "response": "REPORT zproduct_info.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE category = 'Electronics' AND price < 500.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-productname.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of products from the 'ZPRODUCT' table where the 'PRICE' is greater than 1000.",
        "response": "REPORT zproduct_price.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE price > 1000.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-productname, ls_product-price.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of sales orders from the table 'ZSALES_ORDER' where the 'ORDERDATE' is in the current year.",
        "response": "REPORT zsales_order_current_year.\n\nDATA: lt_sales_order TYPE TABLE OF zsales_order,\n      ls_sales_order TYPE zsales_order,\n      lv_current_year TYPE sy-datum.\n\nGET TIME STAMP FIELD lv_current_year.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zsales_order INTO TABLE lt_sales_order WHERE orderdate+0(4) = lv_current_year+0(4).\n\n  LOOP AT lt_sales_order INTO ls_sales_order.\n    WRITE: / ls_sales_order-orderid, ls_sales_order-customerid, ls_sales_order-orderdate.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the list of customers from the 'ZCUSTOMER' table sorted by 'NAME' in ascending order.",
        "response": "REPORT zcustomer_sort.\n\nDATA: lt_customer TYPE TABLE OF zcustomer,\n      ls_customer TYPE zcustomer.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zcustomer INTO TABLE lt_customer ORDER BY name ASCENDING.\n\n  LOOP AT lt_customer INTO ls_customer.\n    WRITE: / ls_customer-custid, ls_customer-name.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of customers from the table 'ZCUSTOMER' where the 'COUNTRY' is 'USA' and 'CITY' is 'Chicago'.",
        "response": "REPORT zcustomer_country_city.\n\nDATA: lt_customer TYPE TABLE OF zcustomer,\n      ls_customer TYPE zcustomer.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zcustomer INTO TABLE lt_customer WHERE country = 'USA' AND city = 'Chicago'.\n\n  LOOP AT lt_customer INTO ls_customer.\n    WRITE: / ls_customer-custid, ls_customer-name, ls_customer-country, ls_customer-city.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the list of employees from the 'ZEMPLOYEE' table whose 'SALARY' is greater than 5000 and 'AGE' is less than 30.",
        "response": "REPORT zemployee_salary_age.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE salary > 5000 AND age < 30.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-name, ls_employee-salary, ls_employee-age.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to update the 'STOCK' of a product in the 'ZPRODUCT' table by reducing it by 1, given the 'PRODUCTID'.",
        "response": "REPORT zupdate_product_stock.\n\nDATA: lv_productid TYPE zproduct-productid VALUE 'P001',\n      lv_stock     TYPE zproduct-stock.\n\nSELECT SINGLE stock FROM zproduct INTO lv_stock WHERE productid = lv_productid.\n\nIF sy-subrc = 0.\n  lv_stock = lv_stock - 1.\n  UPDATE zproduct SET stock = lv_stock WHERE productid = lv_productid.\n  IF sy-subrc = 0.\n    WRITE: / 'Product stock updated successfully for Product ID: ', lv_productid.\n  ELSE.\n    WRITE: / 'Error in updating product stock for Product ID: ', lv_productid.\n  ENDIF.\nELSE.\n  WRITE: / 'Product not found for Product ID: ', lv_productid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display a list of sales orders from the 'ZSALES_ORDER' table where the 'ORDERSTATUS' is 'Pending'.",
        "response": "REPORT zsales_order_status.\n\nDATA: lt_sales_order TYPE TABLE OF zsales_order,\n      ls_sales_order TYPE zsales_order.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zsales_order INTO TABLE lt_sales_order WHERE orderstatus = 'Pending'.\n\n  LOOP AT lt_sales_order INTO ls_sales_order.\n    WRITE: / ls_sales_order-orderid, ls_sales_order-customerid, ls_sales_order-orderstatus.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of products from the 'ZPRODUCT' table where the 'STOCK' is less than 5.",
        "response": "REPORT zproduct_stock.\n\nDATA: lt_product TYPE TABLE OF zproduct,\n      ls_product TYPE zproduct.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zproduct INTO TABLE lt_product WHERE stock < 5.\n\n  LOOP AT lt_product INTO ls_product.\n    WRITE: / ls_product-productid, ls_product-productname, ls_product-stock.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to calculate the sum of 'AMOUNT' field from the 'ZSALES' table for a given 'CUSTOMERID'.",
        "response": "REPORT ztotal_amount.\n\nDATA: lv_customerid TYPE zsales-customerid VALUE 'C001',\n      lv_total_amount TYPE zsales-amount.\n\nSELECT SUM( amount ) FROM zsales INTO lv_total_amount WHERE customerid = lv_customerid.\n\nIF sy-subrc = 0.\n  WRITE: / 'The total amount spent by Customer ID: ', lv_customerid, ' is ', lv_total_amount.\nELSE.\n  WRITE: / 'Error in calculating the total amount spent by Customer ID: ', lv_customerid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to count the number of employees in each department from the 'ZEMPLOYEE' table and display the results.",
        "response": "REPORT zcount_employees.\n\nTYPES: BEGIN OF ty_employee,\n         empid       TYPE zemployee-empid,\n         deptid      TYPE zemployee-deptid,\n       END OF ty_employee,\n       BEGIN OF ty_result,\n         deptid      TYPE zemployee-deptid,\n         emp_count   TYPE i,\n       END OF ty_result.\n\nDATA: lt_employee TYPE TABLE OF ty_employee,\n      lt_result   TYPE SORTED TABLE OF ty_result WITH UNIQUE KEY deptid,\n      ls_result   TYPE ty_result.\n\nSTART-OF-SELECTION.\n\n  SELECT empid deptid FROM zemployee INTO TABLE lt_employee.\n\n  SORT lt_employee BY deptid.\n\n  LOOP AT lt_employee.\n    AT NEW deptid.\n      ls_result-deptid = lt_employee-deptid.\n      ls_result-emp_count = 1.\n      INSERT ls_result INTO TABLE lt_result.\n    ELSE.\n      ADD 1 TO lt_result[ lt_employee-deptid ]-emp_count.\n    ENDAT.\n  ENDLOOP.\n\n  LOOP AT lt_result INTO ls_result.\n    WRITE: / 'Department ID: ', ls_result-deptid, 'Employee Count: ', ls_result-emp_count.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of customers from the 'ZCUSTOMER' table where the 'COUNTRY' is 'Germany'.",
        "response": "REPORT zcustomer_germany.\n\nDATA: lt_customer TYPE TABLE OF zcustomer,\n      ls_customer TYPE zcustomer.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zcustomer INTO TABLE lt_customer WHERE country = 'Germany'.\n\n  LOOP AT lt_customer INTO ls_customer.\n    WRITE: / ls_customer-custid, ls_customer-name, ls_customer-country.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to calculate the average salary from the 'ZEMPLOYEE' table for a given 'DEPARTMENT'.",
        "response": "REPORT zavg_salary.\n\nDATA: lv_department TYPE zemployee-department VALUE 'Sales',\n      lv_avg_salary TYPE P DECIMALS 2.\n\nSELECT AVG( salary ) FROM zemployee INTO lv_avg_salary WHERE department = lv_department.\n\nIF sy-subrc = 0.\n  WRITE: / 'The average salary for Department: ', lv_department, ' is ', lv_avg_salary.\nELSE.\n  WRITE: / 'Error in calculating the average salary for Department: ', lv_department.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to update the 'STOCK' of a product in the 'ZPRODUCT' table given the 'PRODUCTID'.",
        "response": "REPORT zupdate_product.\n\nDATA: lv_productid TYPE zproduct-productid VALUE '001',\n      lv_stock     TYPE zproduct-stock VALUE 50.\n\nUPDATE zproduct SET stock = lv_stock WHERE productid = lv_productid.\n\nIF sy-subrc = 0.\n  WRITE: / 'Product stock updated successfully for Product ID: ', lv_productid.\nELSE.\n  WRITE: / 'Error in updating product stock for Product ID: ', lv_productid.\nENDIF."
    },
    {
        "prompt": "Write an ABAP program to display the list of customers from the 'ZCUSTOMER' table who are from 'GERMANY' and have 'GOLD' membership.",
        "response": "REPORT zcustomer_membership.\n\nDATA: lt_customer TYPE TABLE OF zcustomer,\n      ls_customer TYPE zcustomer,\n      lv_country TYPE zcustomer-country VALUE 'GERMANY',\n      lv_membership TYPE zcustomer-membership VALUE 'GOLD'.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zcustomer INTO TABLE lt_customer WHERE country = lv_country AND membership = lv_membership.\n\n  LOOP AT lt_customer INTO ls_customer.\n    WRITE: / ls_customer-custid, ls_customer-name, ls_customer-country, ls_customer-membership.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display the 'EMPID' and 'NAME' of all employees from the 'ZEMPLOYEE' table whose 'SALARY' is greater than 5000.",
        "response": "REPORT zemployee_salary.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE salary > 5000.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-name.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of employees from the 'ZEMPLOYEE' table who have a 'SALARY' greater than 5000 and belong to the 'HR' department.",
        "response": "REPORT zemployee_salary_dept.\n\nDATA: lt_employee TYPE TABLE OF zemployee,\n      ls_employee TYPE zemployee.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zemployee INTO TABLE lt_employee WHERE salary > 5000 AND deptid = 'HR'.\n\n  LOOP AT lt_employee INTO ls_employee.\n    WRITE: / ls_employee-empid, ls_employee-empname, ls_employee-deptid, ls_employee-salary.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of customers from the 'ZCUSTOMER' table who have made more than 10 orders in the 'ZORDER' table.",
        "response": "REPORT zcustomer_orders.\n\nDATA: lt_customer TYPE TABLE OF zcustomer,\n      ls_customer TYPE zcustomer,\n      lv_orders TYPE i.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zcustomer INTO TABLE lt_customer.\n\n  LOOP AT lt_customer INTO ls_customer.\n    SELECT COUNT( * ) FROM zorder INTO lv_orders WHERE customerid = ls_customer-custid.\n    IF lv_orders > 10.\n      WRITE: / ls_customer-custid, ls_customer-name, lv_orders.\n    ENDIF.\n  ENDLOOP."
    },
    {
        "prompt": "Write an ABAP program to display a list of customers from the table 'ZCUSTOMER' where the 'CITY' is 'New York'.",
        "response": "REPORT zcustomer_city.\n\nDATA: lt_customer TYPE TABLE OF zcustomer,\n      ls_customer TYPE zcustomer.\n\nSTART-OF-SELECTION.\n\n  SELECT * FROM zcustomer INTO TABLE lt_customer WHERE city = 'New York'.\n\n  LOOP AT lt_customer INTO ls_customer.\n    WRITE: / ls_customer-custid, ls_customer-name, ls_customer-city.\n  ENDLOOP."
    }
]